{"version":3,"file":"Layout_D-RHRMxQ.mjs","sources":["../../../../astro:scripts/page-ssr.js","../../../../node_modules/astro/components/ViewTransitions.astro","../../../../src/components/Head.astro","../../../../src/components/Container.astro","../../../../src/components/NowPlaying.astro","../../../../src/components/SysInfo.astro","../../../../src/components/Header.astro","../../../../src/components/BackToTop.astro","../../../../src/components/Footer.astro","../../../../src/lib/utils.ts","../../../../src/components/ui/button.tsx","../../../../src/components/ui/calendar.tsx","../../../../node_modules/astro-pagefind/src/components/Search.astro","../../../../src/components/PageFind.astro","../../../../src/components/Quasar.astro","../../../../src/layouts/Layout.astro"],"sourcesContent":["import '@astrojs/tailwind/base.css';\nimport * as Sentry from \"@sentry/astro\";\n\nSentry.init({\n  dsn: import.meta.env.PUBLIC_SENTRY_DSN,\n  debug: false,\n  environment: import.meta.env.PUBLIC_VERCEL_ENV,\n  release: import.meta.env.PUBLIC_VERCEL_GIT_COMMIT_SHA,\n  tracesSampleRate: 1,\n});","---\ntype Fallback = 'none' | 'animate' | 'swap';\n\nexport interface Props {\n\tfallback?: Fallback;\n\t/** @deprecated handleForms is enabled by default in Astro 4.0\n\t *\n\t * Set `data-astro-reload` on your form to opt-out of the default behavior.\n\t */\n\thandleForms?: boolean;\n}\n\nconst { fallback = 'animate' } = Astro.props;\n---\n\n<style is:global>\n\t/* Route announcer */\n\t.astro-route-announcer {\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\ttop: 0;\n\t\tclip: rect(0 0 0 0);\n\t\tclip-path: inset(50%);\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\twidth: 1px;\n\t\theight: 1px;\n\t}\n</style>\n<meta name=\"astro-view-transitions-enabled\" content=\"true\" />\n<meta name=\"astro-view-transitions-fallback\" content={fallback} />\n<script>\n\timport type { Options } from 'astro:transitions/client';\n\timport { supportsViewTransitions, navigate } from 'astro:transitions/client';\n\t// NOTE: import from `astro/virtual-modules/prefetch.js` as `astro:prefetch` requires the `prefetch` config to be enabled\n\t// @ts-ignore\n\timport { init } from 'astro/virtual-modules/prefetch.js';\n\n\ttype Fallback = 'none' | 'animate' | 'swap';\n\n\tfunction getFallback(): Fallback {\n\t\tconst el = document.querySelector('[name=\"astro-view-transitions-fallback\"]');\n\t\tif (el) {\n\t\t\treturn el.getAttribute('content') as Fallback;\n\t\t}\n\t\treturn 'animate';\n\t}\n\n\tfunction isReloadEl(el: HTMLElement | SVGAElement): boolean {\n\t\treturn el.dataset.astroReload !== undefined;\n\t}\n\n\tif (supportsViewTransitions || getFallback() !== 'none') {\n\t\tif (import.meta.env.DEV && window.matchMedia('(prefers-reduced-motion)').matches) {\n\t\t\tconsole.warn(\n\t\t\t\t`[transitions]: all view transition animations, including fallback animation, are disabled as this device has the prefer-reduced-motion setting enabled.`,\n\t\t\t);\n\t\t}\n\t\tdocument.addEventListener('click', (ev) => {\n\t\t\tlet link = ev.target;\n\t\t\tif (ev.composed) {\n\t\t\t\tlink = ev.composedPath()[0];\n\t\t\t}\n\t\t\tif (link instanceof Element) {\n\t\t\t\tlink = link.closest('a, area');\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!(link instanceof HTMLAnchorElement) &&\n\t\t\t\t!(link instanceof SVGAElement) &&\n\t\t\t\t!(link instanceof HTMLAreaElement)\n\t\t\t)\n\t\t\t\treturn;\n\t\t\t// This check verifies that the click is happening on an anchor\n\t\t\t// that is going to another page within the same origin. Basically it determines\n\t\t\t// same-origin navigation, but omits special key combos for new tabs, etc.\n\t\t\tconst linkTarget = link instanceof HTMLElement ? link.target : link.target.baseVal;\n\t\t\tconst href = link instanceof HTMLElement ? link.href : link.href.baseVal;\n\t\t\tconst origin = new URL(href, location.href).origin;\n\t\t\tif (\n\t\t\t\tisReloadEl(link) ||\n\t\t\t\tlink.hasAttribute('download') ||\n\t\t\t\t!link.href ||\n\t\t\t\t(linkTarget && linkTarget !== '_self') ||\n\t\t\t\torigin !== location.origin ||\n\t\t\t\tev.button !== 0 || // left clicks only\n\t\t\t\tev.metaKey || // new tab (mac)\n\t\t\t\tev.ctrlKey || // new tab (windows)\n\t\t\t\tev.altKey || // download\n\t\t\t\tev.shiftKey || // new window\n\t\t\t\tev.defaultPrevented\n\t\t\t) {\n\t\t\t\t// No page transitions in these cases,\n\t\t\t\t// Let the browser standard action handle this\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tev.preventDefault();\n\t\t\tnavigate(href, {\n\t\t\t\thistory: link.dataset.astroHistory === 'replace' ? 'replace' : 'auto',\n\t\t\t\tsourceElement: link,\n\t\t\t});\n\t\t});\n\n\t\tdocument.addEventListener('submit', (ev) => {\n\t\t\tlet el = ev.target as HTMLElement;\n\t\t\tif (el.tagName !== 'FORM' || ev.defaultPrevented || isReloadEl(el)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst form = el as HTMLFormElement;\n\t\t\tconst submitter = ev.submitter;\n\t\t\tconst formData = new FormData(form, submitter);\n\t\t\t// form.action and form.method can point to an <input name=\"action\"> or <input name=\"method\">\n\t\t\t// in which case should fallback to the form attribute\n\t\t\tconst formAction =\n\t\t\t\ttypeof form.action === 'string' ? form.action : form.getAttribute('action');\n\t\t\tconst formMethod =\n\t\t\t\ttypeof form.method === 'string' ? form.method : form.getAttribute('method');\n\t\t\t// Use the form action, if defined, otherwise fallback to current path.\n\t\t\tlet action = submitter?.getAttribute('formaction') ?? formAction ?? location.pathname;\n\t\t\t// Use the form method, if defined, otherwise fallback to \"get\"\n\t\t\tconst method = submitter?.getAttribute('formmethod') ?? formMethod ?? 'get';\n\n\t\t\t// the \"dialog\" method is a special keyword used within <dialog> elements\n\t\t\t// https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fs-method\n\t\t\tif (method === 'dialog' || location.origin !== new URL(action, location.href).origin) {\n\t\t\t\t// No page transitions in these cases,\n\t\t\t\t// Let the browser standard action handle this\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst options: Options = { sourceElement: submitter ?? form };\n\t\t\tif (method === 'get') {\n\t\t\t\tconst params = new URLSearchParams(formData as any);\n\t\t\t\tconst url = new URL(action);\n\t\t\t\turl.search = params.toString();\n\t\t\t\taction = url.toString();\n\t\t\t} else {\n\t\t\t\toptions.formData = formData;\n\t\t\t}\n\n\t\t\tev.preventDefault();\n\t\t\tnavigate(action, options);\n\t\t});\n\n\t\t// @ts-expect-error injected by vite-plugin-transitions for treeshaking\n\t\tif (!__PREFETCH_DISABLED__) {\n\t\t\tinit({ prefetchAll: true });\n\t\t}\n\t}\n</script>\n","---\nimport \"../styles/global.css\";\nimport { ViewTransitions } from \"astro:transitions\";\n\ninterface Props {\n  title: string;\n  description: string;\n  image?: string;\n}\n\nconst canonicalURL = new URL(Astro.url.pathname, Astro.site);\n\nconst { title, description, image = \"/blog-placeholder-1.jpg\" } = Astro.props;\n---\n\n<!-- Global Metadata -->\n<meta charset=\"utf-8\" />\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n<link rel=\"icon\" type=\"image/svg+xml\" href=\"/favicon.svg\" />\n<link\n  rel=\"icon\"\n  href=\"data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>🌹</text></svg>\"\n/>\n<meta name=\"generator\" content={Astro.generator} />\n\n<!-- Font preloads -->\n<link\n  rel=\"preload\"\n  href=\"/fonts/geist.woff2\"\n  as=\"font\"\n  type=\"font/woff2\"\n  crossorigin\n/>\n<link\n  rel=\"preload\"\n  href=\"/fonts/geist-mono.woff2\"\n  as=\"font\"\n  type=\"font/woff2\"\n  crossorigin\n/>\n\n<!-- Canonical URL -->\n<link rel=\"canonical\" href={canonicalURL} />\n\n<!-- Primary Meta Tags -->\n<title>{title}</title>\n<meta name=\"title\" content={title} />\n<meta name=\"description\" content={description} />\n\n<!-- Open Graph / Facebook -->\n<meta property=\"og:type\" content=\"website\" />\n<meta property=\"og:url\" content={Astro.url} />\n<meta property=\"og:title\" content={title} />\n<meta property=\"og:description\" content={description} />\n<meta property=\"og:image\" content={new URL(image, Astro.url)} />\n\n<!-- Twitter -->\n<meta property=\"twitter:card\" content=\"summary_large_image\" />\n<meta property=\"twitter:url\" content={Astro.url} />\n<meta property=\"twitter:title\" content={title} />\n<meta property=\"twitter:description\" content={description} />\n<meta property=\"twitter:image\" content={new URL(image, Astro.url)} />\n\n<!-- PageFind -->\n<!-- <link href=\"/pagefind/pagefind-ui.css\" rel=\"stylesheet\" /> -->\n<!-- <script is:inline src=\"/pagefind/pagefind-ui.js\"></script> -->\n\n<ViewTransitions />\n\n<script is:inline>\n  function init() {\n    preloadTheme();\n    onScroll();\n    animate();\n    updateThemeButtons();\n    addCopyCodeButtons();\n    setGiscusTheme();\n\n    const backToTop = document.getElementById(\"back-to-top\");\n    backToTop?.addEventListener(\"click\", (event) => scrollToTop(event));\n\n    const backToPrev = document.getElementById(\"back-to-prev\");\n    backToPrev?.addEventListener(\"click\", () => window.history.back());\n\n    const lightThemeButton = document.getElementById(\"light-theme-button\");\n    lightThemeButton?.addEventListener(\"click\", () => {\n      localStorage.setItem(\"theme\", \"light\");\n      toggleTheme(false);\n      updateThemeButtons();\n    });\n\n    const darkThemeButton = document.getElementById(\"dark-theme-button\");\n    darkThemeButton?.addEventListener(\"click\", () => {\n      localStorage.setItem(\"theme\", \"dark\");\n      toggleTheme(true);\n      updateThemeButtons();\n    });\n\n    const systemThemeButton = document.getElementById(\"system-theme-button\");\n    systemThemeButton?.addEventListener(\"click\", () => {\n      localStorage.setItem(\"theme\", \"system\");\n      toggleTheme(window.matchMedia(\"(prefers-color-scheme: dark)\").matches);\n      updateThemeButtons();\n    });\n\n    window\n      .matchMedia(\"(prefers-color-scheme: dark)\")\n      .addEventListener(\"change\", (event) => {\n        if (localStorage.theme === \"system\") {\n          toggleTheme(event.matches);\n        }\n      });\n\n    document.addEventListener(\"scroll\", onScroll);\n  }\n\n  function updateThemeButtons() {\n    const theme = localStorage.getItem(\"theme\");\n    const lightThemeButton = document.getElementById(\"light-theme-button\");\n    const darkThemeButton = document.getElementById(\"dark-theme-button\");\n    const systemThemeButton = document.getElementById(\"system-theme-button\");\n\n    function removeActiveButtonTheme(button) {\n      button?.classList.remove(\"bg-black/5\");\n      button?.classList.remove(\"dark:bg-white/5\");\n    }\n\n    function addActiveButtonTheme(button) {\n      button?.classList.add(\"bg-black/5\");\n      button?.classList.add(\"dark:bg-white/5\");\n    }\n\n    removeActiveButtonTheme(lightThemeButton);\n    removeActiveButtonTheme(darkThemeButton);\n    removeActiveButtonTheme(systemThemeButton);\n\n    if (theme === \"light\") {\n      addActiveButtonTheme(lightThemeButton);\n    } else if (theme === \"dark\") {\n      addActiveButtonTheme(darkThemeButton);\n    } else {\n      addActiveButtonTheme(systemThemeButton);\n    }\n  }\n\n  function animate() {\n    const animateElements = document.querySelectorAll(\".animate\");\n\n    animateElements.forEach((element, index) => {\n      setTimeout(() => {\n        element.classList.add(\"show\");\n      }, index * 100);\n    });\n  }\n\n  function onScroll() {\n    if (window.scrollY > 0) {\n      document.documentElement.classList.add(\"scrolled\");\n    } else {\n      document.documentElement.classList.remove(\"scrolled\");\n    }\n  }\n\n  function scrollToTop(event) {\n    event.preventDefault();\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n  }\n\n  function toggleTheme(dark) {\n    const css = document.createElement(\"style\");\n\n    css.appendChild(\n      document.createTextNode(\n        `* {\n             -webkit-transition: none !important;\n             -moz-transition: none !important;\n             -o-transition: none !important;\n             -ms-transition: none !important;\n             transition: none !important;\n          }\n        `,\n      ),\n    );\n\n    document.head.appendChild(css);\n\n    if (dark) {\n      document.documentElement.classList.add(\"dark\");\n    } else {\n      document.documentElement.classList.remove(\"dark\");\n    }\n\n    window.getComputedStyle(css).opacity;\n    document.head.removeChild(css);\n\n    setGiscusTheme();\n  }\n\n  function preloadTheme() {\n    const userTheme = localStorage.theme;\n\n    if (userTheme === \"light\" || userTheme === \"dark\") {\n      toggleTheme(userTheme === \"dark\");\n    } else {\n      toggleTheme(window.matchMedia(\"(prefers-color-scheme: dark)\").matches);\n    }\n  }\n\n  function addCopyCodeButtons() {\n    let copyButtonLabel = \"📋\";\n    let codeBlocks = Array.from(document.querySelectorAll(\"pre\"));\n\n    async function copyCode(codeBlock, copyButton) {\n      const codeText = codeBlock.innerText;\n      const buttonText = copyButton.innerText;\n      const textToCopy = codeText.replace(buttonText, \"\");\n\n      await navigator.clipboard.writeText(textToCopy);\n      copyButton.innerText = \"✅\";\n\n      setTimeout(() => {\n        copyButton.innerText = copyButtonLabel;\n      }, 2000);\n    }\n\n    for (let codeBlock of codeBlocks) {\n      const wrapper = document.createElement(\"div\");\n      wrapper.style.position = \"relative\";\n\n      const copyButton = document.createElement(\"button\");\n      copyButton.innerText = copyButtonLabel;\n      copyButton.classList = \"copy-code\";\n\n      codeBlock.setAttribute(\"tabindex\", \"0\");\n      codeBlock.appendChild(copyButton);\n\n      codeBlock.parentNode.insertBefore(wrapper, codeBlock);\n      wrapper.appendChild(codeBlock);\n\n      copyButton?.addEventListener(\"click\", async () => {\n        await copyCode(codeBlock, copyButton);\n      });\n    }\n  }\n\n  const setGiscusTheme = () => {\n    const giscus = document.querySelector(\".giscus-frame\");\n\n    const isDark = document.documentElement.classList.contains(\"dark\");\n\n    if (giscus) {\n      const url = new URL(giscus.src);\n      url.searchParams.set(\"theme\", isDark ? \"dark\" : \"light\");\n      giscus.src = url.toString();\n    }\n  };\n\n  document.addEventListener(\"DOMContentLoaded\", () => init());\n  document.addEventListener(\"astro:after-swap\", () => init());\n  preloadTheme();\n</script>\n","---\n\n---\n\n<div class=\"mx-auto max-w-screen-sm px-3\">\n  <slot />\n</div>\n","---\n// Add TypeScript interface for the Spotify data\ninterface SpotifyData {\n  isPlaying: boolean;\n  title: string;\n  artist: string;\n  albumImageUrl: string;\n  songUrl: string;\n}\n---\n\n<div id=\"now-playing\" class=\"flex items-center space-x-4 opacity-0 transition-opacity duration-300 rounded\" style=\"background-image: url(''); background-size: cover; background-position: center; background-color: rgba(255, 255, 255, 0.5);\"> <!-- Added semi-transparent white background -->\n  <img id=\"album-cover\" src=\"\" alt=\"Album Cover\" class=\"w-16 h-16 rounded-md hidden\"> <!-- Hidden since we use background -->\n  <div class=\"text-white\"> <!-- Added text color for visibility -->\n    <h3 id=\"song-title\" class=\"font-semibold text-lg\"></h3> <!-- Added text size -->\n    <p id=\"artist-name\" class=\"text-sm text-gray-300\"></p> <!-- Changed text color for better contrast -->\n  </div>\n  <a id=\"spotify-link\" href=\"\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"ml-auto flex-shrink-0\"> <!-- Added flex-shrink-0 to keep it on the right -->\n    <svg class=\"w-6 h-6\" viewBox=\"0 0 168 168\">\n      <path fill=\"#1ED760\" d=\"M83.996.277C37.747.277.253 37.77.253 84.019c0 46.251 37.494 83.741 83.743 83.741 46.254 0 83.744-37.49 83.744-83.741 0-46.246-37.49-83.738-83.745-83.738l.001-.004zm38.404 120.78a5.217 5.217 0 01-7.18 1.73c-19.662-12.01-44.414-14.73-73.564-8.07a5.222 5.222 0 01-6.249-3.93 5.213 5.213 0 013.926-6.25c31.9-7.291 59.263-4.15 81.337 9.34 2.46 1.51 3.24 4.72 1.73 7.18zm10.25-22.805c-1.89 3.075-5.91 4.045-8.98 2.155-22.51-13.839-56.823-17.846-83.448-9.764-3.453 1.043-7.1-.903-8.148-4.35a6.538 6.538 0 014.354-8.143c30.413-9.228 68.222-4.758 94.072 11.127 3.07 1.89 4.04 5.91 2.15 8.976v-.001zm.88-23.744c-26.99-16.031-71.52-17.505-97.289-9.684-4.138 1.255-8.514-1.081-9.768-5.219a7.835 7.835 0 015.221-9.771c29.581-8.98 78.756-7.245 109.83 11.202a7.823 7.823 0 012.74 10.733c-2.2 3.722-7.02 4.949-10.73 2.739z\"/>\n    </svg>\n  </a>\n</div>\n\n<script>\n  const nowPlayingElement = document.getElementById('now-playing') as HTMLDivElement;\n  const albumCoverElement = document.getElementById('album-cover') as HTMLImageElement;\n  const songTitleElement = document.getElementById('song-title') as HTMLHeadingElement;\n  const artistNameElement = document.getElementById('artist-name') as HTMLParagraphElement;\n  const spotifyLinkElement = document.getElementById('spotify-link') as HTMLAnchorElement;\n\n  let lastUpdateTime = 0;\n  const updateInterval = 30000; // 30 seconds\n\n  async function updateNowPlaying() {\n    const now = Date.now();\n    if (now - lastUpdateTime < updateInterval) {\n      return;\n    }\n\n    try {\n      const response = await fetch('/api/spotify/now-playing', { headers: { 'Cache-Control': 'no-cache' } });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data: SpotifyData = await response.json();\n\n      if (data.isPlaying) {\n        updateUI(data);\n        nowPlayingElement.style.opacity = '1';\n      } else {\n        nowPlayingElement.style.opacity = '0';\n      }\n\n      lastUpdateTime = now;\n    } catch (error) {\n      console.error('Error fetching now playing data:', error);\n      nowPlayingElement.style.opacity = '0';\n    }\n  }\n\n  function updateUI(data: SpotifyData) {\n    nowPlayingElement.style.backgroundImage = `url(${data.albumImageUrl})`; // Set background image\n    songTitleElement.textContent = data.title;\n    artistNameElement.textContent = data.artist;\n    spotifyLinkElement.href = data.songUrl;\n  }\n\n  // Initial update\n  updateNowPlaying();\n\n  // Set up interval and visibility change listener\n  setInterval(updateNowPlaying, updateInterval);\n  document.addEventListener('visibilitychange', () => {\n    if (!document.hidden) {\n      updateNowPlaying();\n    }\n  });\n</script>\n","---\nimport Container from \"@components/Container.astro\";\nimport { getNowPlaying } from \"../utils/spotify\";\nimport NowPlaying from \"@components/NowPlaying.astro\";\n\n// Fetch the current playback state\nlet playbackState = \"loading\";\nlet trackInfo = \"Loading...\";\nlet coverArt = \"\";\ntry {\n  const response = await getNowPlaying();\n  if (response.status === 204) {\n    playbackState = \"not_playing\";\n    trackInfo = \"😴 afk 💤\";\n  } else if (response.status === 200) {\n    const data = await response.json();\n    playbackState = data.is_playing ? \"playing\" : \"paused\";\n    trackInfo = data.item\n      ? `${data.item.name} - ${data.item.artists[0].name}`\n      : \"No track information\";\n    coverArt = data.item?.album.images[0]?.url || \"\";\n  }\n} catch (error) {\n  console.error(\"Error fetching Spotify playback state:\", error);\n  playbackState = \"error\";\n  trackInfo = \"Error fetching data\";\n}\n---\n\n<Container style=\"width: 210px; overflow: hidden; padding: 0 10px;\">\n  <button\n    id=\"sys-info-btn\"\n    aria-label=\"System information\"\n    class=\"group relative flex w-full items-center justify-between overflow-hidden rounded-full border border-black/15 hover:bg-black/5 focus-visible:bg-black/5 dark:border-white/20 dark:hover:bg-white/5 dark:focus-visible:bg-white/5\"\n    style={`background-image: url(${coverArt}); background-size: cover; background-position: center; background-color: rgba(0, 0, 0, 0.5);`}\n  >\n    <span\n      id=\"current-time\"\n      class=\"text-ghost-600 cursor-pointer text-sm\"\n      style=\"white-space: nowrap; padding-left: 11px;\"></span>\n    <span\n      id=\"track-info\"\n      class=\"text-ghost-600 marquee max-w-full cursor-pointer truncate text-sm\"\n      >{trackInfo}</span\n    >\n    <span\n      id=\"online-indicator\"\n      class=\"glow-ring h-1 w-1 rounded-full\"\n      data-state={playbackState}\n      title=\"Spotify status\"\n      style=\"padding-right: 11px;\"></span>\n  </button>\n\n  <div\n    id=\"now-playing-popover\"\n    class=\"absolute left-1/2 z-50 mt-2 hidden w-[310px] -translate-x-1/2 transform rounded bg-white shadow-lg\"\n  >\n    <!-- NowPlaying component will be displayed here -->\n    <NowPlaying class=\"w-full\" />\n  </div>\n\n  <script\n    define:vars={{\n      initialPlaybackState: playbackState,\n      initialTrackInfo: trackInfo,\n      initialCoverArt: coverArt,\n    }}\n  >\n    let playbackState = initialPlaybackState;\n    let trackInfo = initialTrackInfo;\n    let coverArt = initialCoverArt;\n\n    function updateIndicatorState() {\n      const indicator = document.getElementById(\"online-indicator\");\n      const trackInfoElement = document.getElementById(\"track-info\");\n      const sysInfoBtn = document.getElementById(\"sys-info-btn\");\n\n      if (indicator && trackInfoElement && sysInfoBtn) {\n        switch (playbackState) {\n          case \"playing\":\n            indicator.className =\n              \"glow-ring h-1.5 w-1.5 rounded-full bg-green-600\";\n            indicator.setAttribute(\"title\", \"Spotify: Playing\");\n            indicator.style.boxShadow = \"0 0 5px green, 0 0 10px lime\";\n            break;\n          case \"paused\":\n            indicator.className =\n              \"glow-ring h-1.5 w-1.5 rounded-full bg-yellow-600\";\n            indicator.setAttribute(\"title\", \"Spotify: Paused\");\n            indicator.style.boxShadow = \"0 0 5px yellow, 0 0 10px orange\";\n            break;\n          case \"not_playing\":\n          case \"offline\":\n          default:\n            indicator.className =\n              \"glow-ring h-1.5 w-1.5 rounded-full bg-red-600\";\n            indicator.setAttribute(\"title\", \"Spotify: Not playing or offline\");\n            indicator.style.boxShadow = \"0 0 5px red, 0 0 10px crimson\";\n            break;\n        }\n\n        trackInfoElement.textContent = trackInfo;\n        sysInfoBtn.style.backgroundImage = `url(${coverArt})`;\n      }\n    }\n\n    function updateCurrentTime() {\n      const timeElement = document.getElementById(\"current-time\");\n      if (timeElement) {\n        const now = new Date();\n        timeElement.textContent = now.toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n        });\n      }\n    }\n    // Time Display\n    updateIndicatorState();\n    updateCurrentTime();\n    setInterval(updateCurrentTime, 1000);\n\n    document\n      .getElementById(\"track-info\")\n      ?.addEventListener(\"click\", (event) => {\n        event.stopPropagation();\n        // Toggle the visibility of the NowPlaying component\n        const nowPlayingElement = document.getElementById(\n          \"now-playing-popover\",\n        );\n        nowPlayingElement.classList.toggle(\"hidden\");\n        nowPlayingElement.style.top = `${event.target.getBoundingClientRect().bottom}px`; // Position below the track info\n        nowPlayingElement.style.left = `${event.target.getBoundingClientRect().left}px`; // Align with track info\n      });\n\n    document.getElementById(\"sys-info-btn\")?.addEventListener(\"click\", () => {\n      window.location.href = \"/euthymia\";\n    });\n\n    // Fetch updated now playing information every 7 seconds\n    setInterval(async () => {\n      try {\n        const response = await fetch(\"/api/now-playing\");\n        if (response.ok) {\n          const data = await response.json();\n          playbackState = data.is_playing ? \"playing\" : \"paused\";\n          trackInfo = data.item\n            ? `${data.item.name} - ${data.item.artists[0].name}`\n            : \"No track information\";\n          coverArt = data.item?.album.images[0]?.url || \"\";\n          updateIndicatorState();\n        }\n      } catch (error) {\n        console.error(\"Error fetching now playing data:\", error);\n      }\n    }, 7000);\n\n    document.getElementById(\"close-modal\")?.addEventListener(\"click\", () => {\n      document.getElementById(\"now-playing-modal\")?.classList.add(\"hidden\");\n    });\n  </script>\n\n  <style>\n    .glow-ring {\n      position: relative;\n      border: 1px solid transparent;\n      border-radius: 50%;\n      animation: pulsate 2s infinite;\n      margin-left: 8px;\n    }\n\n    @keyframes pulsate {\n      0% {\n        transform: scale(0.9);\n        box-shadow: 0 0 0 0px rgba(255, 255, 255, 0.7);\n      }\n      50% {\n        transform: scale(1);\n        box-shadow: 0 0 0 5px rgba(255, 255, 255, 0);\n      }\n      100% {\n        transform: scale(0.9);\n        box-shadow: 0 0 0 0px rgba(255, 255, 255, 0);\n      }\n    }\n\n    @keyframes moveGradient {\n      0% {\n        background-position: 0% 50%;\n      }\n      100% {\n        background-position: 100% 50%;\n      }\n    }\n\n    #track-info {\n      display: inline-block;\n      white-space: nowrap;\n      overflow: hidden;\n      width: 100%;\n      animation: marquee 10s linear infinite;\n    }\n\n    @keyframes marquee {\n      0% {\n        transform: translateX(100%);\n      }\n      100% {\n        transform: translateX(-100%);\n      }\n    }\n  </style>\n</Container>\n","---\nimport SysInfo from \"@components/SysInfo.astro\";\nimport Container from \"@components/Container.astro\";\nimport Link from \"@components/Link.astro\";\nimport { SITE } from \"@consts\";\n---\n\n<header transition:persist class=\"py-4\">\n  <Container>\n    <div class=\"flex h-full items-center justify-between\">\n      <a\n        href=\"/\"\n        id=\"ase\"\n        aria-label=\"Home\"\n        class=\"flex items-center rounded border border-black/15 bg-transparent px-2 py-1 text-xs font-semibold transition-colors duration-300 ease-in-out hover:bg-black/5 hover:text-black focus-visible:bg-black/5 focus-visible:text-black dark:border-white/20 dark:bg-neutral-900 dark:hover:bg-white/5 dark:hover:text-white dark:focus-visible:bg-white/5 dark:focus-visible:text-white\"\n      >\n        &nbsp;\n        {SITE.ALIAS}\n        &nbsp;\n      </a>\n\n      <nav class=\"flex items-center gap-1 text-sm\">\n        <SysInfo />\n      </nav>\n    </div>\n  </Container>\n</header>\n\n<style>\n  header {\n    /* display: flex; */\n    align-items: center;\n    min-height: 60px; /* Adjust this value as needed */\n  }\n\n  a#ase {\n    background-color: transparent !important;\n  }\n</style>\n","---\n\n---\n\n<button\n  id=\"back-to-top\"\n  class=\"group relative flex w-fit flex-nowrap rounded border border-black/15 py-1.5 pl-8 pr-3 transition-colors duration-300 ease-in-out hover:bg-black/5 hover:text-black focus-visible:bg-black/5 focus-visible:text-black dark:border-white/20 dark:hover:bg-white/5 dark:hover:text-white dark:focus-visible:bg-white/5 dark:focus-visible:text-white\"\n>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    class=\"absolute left-2 top-1/2 size-4 -translate-y-1/2 rotate-90 fill-none stroke-current stroke-2\"\n  >\n    <line\n      x1=\"5\"\n      y1=\"12\"\n      x2=\"19\"\n      y2=\"12\"\n      class=\"translate-x-2 scale-x-0 transition-transform duration-300 ease-in-out group-hover:translate-x-0 group-hover:scale-x-100 group-focus-visible:translate-x-0 group-focus-visible:scale-x-100\"\n    ></line>\n    <polyline\n      points=\"12 5 5 12 12 19\"\n      class=\"translate-x-1 transition-transform duration-300 ease-in-out group-hover:translate-x-0 group-focus-visible:translate-x-0\"\n    ></polyline>\n  </svg>\n  <div class=\"text-sm\">Back to top</div>\n</button>\n","---\nimport { SITE } from \"@consts\";\nimport Container from \"@components/Container.astro\";\nimport BackToTop from \"@components/BackToTop.astro\";\n---\n\n<footer class=\"animate\">\n  <Container class=\"footer-container\">\n    <div class=\"footer-content relative\">\n      <div class=\"absolute -top-12 right-0\">\n        <BackToTop />\n      </div>\n    </div>\n    <div class=\"flex items-center justify-between\">\n      <div>\n        <a href=\"/about\">\n          {SITE.TITLE} | 🫀 • 🫁 • 🧠 |\n        </a>\n        &copy; {new Date().getFullYear()}\n      </div>\n      <!-- <button id=\"theme-toggle\">??? </button> -->\n      <!-- -->\n      <div class=\"theme-buttons flex flex-wrap items-center gap-1.5\">\n        <!-- <button id=\"theme-toggle\"> -->\n        <button>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"1em\"\n            height=\"1em\"\n            viewBox=\"0 0 24 24\"\n          >\n            <defs>\n              <mask id=\"lineMdLightDarkLoop0\">\n                <circle cx=\"7.5\" cy=\"7.5\" r=\"5.5\" fill=\"#fff\"></circle>\n                <circle cx=\"7.5\" cy=\"7.5\" r=\"5.5\">\n                  <animate\n                    fill=\"freeze\"\n                    attributeName=\"cx\"\n                    dur=\"0.4s\"\n                    values=\"7.5;11\"></animate>\n                  <animate\n                    fill=\"freeze\"\n                    attributeName=\"r\"\n                    dur=\"0.4s\"\n                    values=\"5.5;6.5\"></animate>\n                </circle>\n              </mask>\n              <mask id=\"lineMdLightDarkLoop1\">\n                <g fill=\"#fff\">\n                  <circle cx=\"12\" cy=\"9\" r=\"5.5\">\n                    <animate\n                      fill=\"freeze\"\n                      attributeName=\"cy\"\n                      begin=\"1s\"\n                      dur=\"0.5s\"\n                      values=\"9;15\"></animate>\n                  </circle>\n                  <g fill-opacity=\"0\">\n                    <use\n                      href=\"#lineMdLightDarkLoop2\"\n                      transform=\"rotate(-75 12 15)\"></use>\n                    <use\n                      href=\"#lineMdLightDarkLoop2\"\n                      transform=\"rotate(-25 12 15)\"></use>\n                    <use\n                      href=\"#lineMdLightDarkLoop2\"\n                      transform=\"rotate(25 12 15)\"></use>\n                    <use\n                      href=\"#lineMdLightDarkLoop2\"\n                      transform=\"rotate(75 12 15)\"></use>\n                    <set\n                      fill=\"freeze\"\n                      attributeName=\"fill-opacity\"\n                      begin=\"1.5s\"\n                      to=\"1\"></set>\n                    <animateTransform\n                      attributeName=\"transform\"\n                      dur=\"5s\"\n                      repeatCount=\"indefinite\"\n                      type=\"rotate\"\n                      values=\"0 12 15;50 12 15\"></animateTransform>\n                  </g>\n                </g>\n                <path d=\"M0 10h26v5h-26z\"></path>\n                <path\n                  stroke=\"#fff\"\n                  stroke-dasharray=\"26\"\n                  stroke-dashoffset=\"26\"\n                  stroke-width=\"2\"\n                  d=\"M22 12h-22\"\n                >\n                  <animate\n                    attributeName=\"d\"\n                    dur=\"6s\"\n                    repeatCount=\"indefinite\"\n                    values=\"M22 12h-22;M24 12h-22;M22 12h-22\"></animate>\n                  <animate\n                    fill=\"freeze\"\n                    attributeName=\"stroke-dashoffset\"\n                    begin=\"0.5s\"\n                    dur=\"0.4s\"\n                    values=\"26;0\"></animate>\n                </path>\n              </mask>\n              <symbol id=\"lineMdLightDarkLoop2\">\n                <path d=\"M11 18h2L12 20z\" opacity=\"0\">\n                  <animate\n                    fill=\"freeze\"\n                    attributeName=\"d\"\n                    begin=\"1.5s\"\n                    dur=\"0.4s\"\n                    values=\"M11 18h2L12 20z;M10.5 21.5h3L12 24z\"></animate>\n                  <set fill=\"freeze\" attributeName=\"opacity\" begin=\"1.5s\" to=\"1\"\n                  ></set>\n                </path>\n              </symbol>\n            </defs>\n            <g fill=\"currentColor\">\n              <rect\n                width=\"13\"\n                height=\"13\"\n                x=\"1\"\n                y=\"1\"\n                mask=\"url(#lineMdLightDarkLoop0)\"></rect>\n              <path\n                d=\"M-2 11h28v13h-28z\"\n                mask=\"url(#lineMdLightDarkLoop1)\"\n                transform=\"rotate(-45 12 12)\"></path>\n            </g>\n          </svg>\n        </button>\n        <!--  -->\n      </div>\n    </div>\n  </Container>\n</footer>\n\n<script>\n  function setupThemeToggle() {\n    const html = document.documentElement;\n    const themeToggle = document.getElementById(\"theme-toggle\");\n    const lightThemeButton = document.getElementById(\"light-theme-button\");\n    const darkThemeButton = document.getElementById(\"dark-theme-button\");\n    const systemThemeButton = document.getElementById(\"system-theme-button\");\n\n    // Check for saved theme preference or use the system preference\n    const savedTheme = localStorage.getItem(\"theme\");\n    const systemTheme = window.matchMedia(\"(prefers-color-scheme: dark)\")\n      .matches\n      ? \"dark\"\n      : \"light\";\n    const initialTheme = savedTheme || systemTheme;\n\n    // Apply the initial theme\n    html.classList.remove(\"dark\", \"light\");\n    html.classList.add(initialTheme);\n\n    // Theme toggle event listener\n    themeToggle?.addEventListener(\"click\", () => {\n      const currentTheme = html.classList.contains(\"dark\") ? \"dark\" : \"light\";\n      const newTheme = currentTheme === \"dark\" ? \"light\" : \"dark\";\n\n      html.classList.remove(currentTheme);\n      html.classList.add(newTheme);\n      localStorage.setItem(\"theme\", newTheme);\n    });\n\n    // Light theme button\n    lightThemeButton?.addEventListener(\"click\", () => {\n      html.classList.remove(\"dark\");\n      html.classList.add(\"light\");\n      localStorage.setItem(\"theme\", \"light\");\n    });\n\n    // Dark theme button\n    darkThemeButton?.addEventListener(\"click\", () => {\n      html.classList.remove(\"light\");\n      html.classList.add(\"dark\");\n      localStorage.setItem(\"theme\", \"dark\");\n    });\n\n    // System theme button\n    systemThemeButton?.addEventListener(\"click\", () => {\n      html.classList.remove(\"light\", \"dark\");\n      html.classList.add(systemTheme);\n      localStorage.removeItem(\"theme\");\n    });\n  }\n\n  // Run the setup on initial load\n  setupThemeToggle();\n\n  // Re-run the setup when the content changes (for Astro page changes)\n  document.addEventListener(\"astro:after-swap\", setupThemeToggle);\n</script>\n","import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport function formatDate(date: Date) {\n  return Intl.DateTimeFormat(\"en-US\", {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n  }).format(date);\n}\n\nexport function readingTime(html: string) {\n  const textOnly = html.replace(/<[^>]+>/g, \"\");\n  const wordCount = textOnly.split(/\\s+/).length;\n  const readingTimeMinutes = (wordCount / 200 + 1).toFixed();\n  return `${readingTimeMinutes} min read`;\n}\n\nexport function getRandomSize(): string {\n  const sizes = ['small', 'medium', 'large'];\n  const weights = [0.5, 0.3, 0.2]; // Adjust these to change the frequency of each size\n  const random = Math.random();\n  let sum = 0;\n  for (let i = 0; i < weights.length; i++) {\n    sum += weights[i];\n    if (random < sum) return sizes[i];\n  }\n  return sizes[0];\n}\n","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ ...props }) => <ChevronLeft className=\"h-4 w-4\" />,\n        IconRight: ({ ...props }) => <ChevronRight className=\"h-4 w-4\" />,\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","---\nimport \"@pagefind/default-ui/css/ui.css\";\n\nexport interface Props {\n  readonly id?: string;\n  readonly className?: string;\n  readonly query?: string;\n  readonly uiOptions?: Record<string, any>;\n}\n\nconst { id, className, query, uiOptions = {} } = Astro.props;\nconst bundlePath = `${import.meta.env.BASE_URL}pagefind/`;\n---\n\n<div\n  id={id}\n  class:list={[className, \"pagefind-init\"]}\n  data-pagefind-ui\n  data-bundle-path={bundlePath}\n  data-query={query}\n  data-ui-options={JSON.stringify(uiOptions)}\n>\n</div>\n<script>\n  import { PagefindUI } from \"@pagefind/default-ui\";\n\n  function initPageFind() {\n    const allSelector = \"[data-pagefind-ui]\";\n    for (const el of document.querySelectorAll(`${allSelector}.pagefind-init`)) {\n      const elSelector = [\n        ...(el.id ? [`#${el.id}`] : []),\n        ...[...el.classList.values()].map((c) => `.${c}`),\n        allSelector,\n      ].join(\"\");\n      const bundlePath = el.getAttribute(\"data-bundle-path\");\n      const opts = JSON.parse(el.getAttribute(\"data-ui-options\") ?? \"{}\");\n      new PagefindUI({\n        ...opts,\n        element: elSelector,\n        bundlePath,\n      });\n      el.classList.remove(\"pagefind-init\");\n      const query = el.getAttribute(\"data-query\");\n      if (query) {\n        const input = el.querySelector<HTMLInputElement>(`input[type=\"text\"]`);\n        if (input) {\n          input.value = query;\n          input.dispatchEvent(new Event(\"input\", { bubbles: true }));\n        }\n      }\n    }\n  }\n\n  document.addEventListener(\"astro:page-load\", initPageFind);\n  if (document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", initPageFind);\n  } else {\n    initPageFind();\n  }\n</script>\n","---\nimport { Calendar } from \"@/components/ui/calendar\"\nimport Search from \"astro-pagefind/components/Search\";\nimport NowPlaying from \"@/components/NowPlaying.astro\";\n\n// Define your navigation pages\nconst navigationPages = [\n  { title: \"Home\", url: \"/\" },\n  { title: \"Petals\", url: \"/petals\" },\n  { title: \"About\", url: \"/about\" },\n  { title: \"404\", url: \"/404\" },\n  // Add any other main pages you want to include in the search\n];\n\n---\n\n<div\n  transition:persist\n  id=\"backdrop\"\n  class=\"bg-[rgba(0, 0, 0, 0.5] invisible fixed left-0 top-0 z-50 flex h-screen w-full justify-center p-6 backdrop-blur-sm\"\n>\n  <div\n    id=\"pagefind-container\"\n    class=\"m-0 flex h-fit max-h-[80%] w-full max-w-screen-sm flex-col overflow-auto rounded border border-black/15 bg-neutral-100 p-2 px-4 py-3 shadow-lg dark:border-white/20 dark:bg-neutral-900 relative\"\n  >\n    <Search\n      id=\"search\"\n      className=\"pagefind-ui\"\n      uiOptions={{\n        showImages: true,\n        excerptLength: 16,\n        resetStyles: false, \n      }}\n    />\n\n    <div class=\"flex justify-between\">\n      <div id=\"calendar-container\" class=\"mb-4\">\n        <!-- Placeholder for ShadUI Calendar -->\n        <Calendar />\n      </div>\n      <NowPlaying />\n    </div>\n\n    <div class=\"text-right text-xs dark:prose-invert mt-2\">\n      Press <span class=\"prose text-xs dark:prose-invert\"\n        ><kbd class=\"\">Esc</kbd> </span> \n    </div>\n    <div id=\"time-display\" class=\"text-left mb-4\">\n      <p>Time: <span id=\"current-time\"></span></p>\n    </div>\n\n  </div>\n</div>\n\n<script define:vars={{ navigationPages }}>\n  const ase = document.getElementById(\"ase\");\n  if (ase) {\n    ase.addEventListener(\"click\", () => {\n      openPagefind();\n    });\n  }\n\n  const backdrop = document.getElementById(\"backdrop\");\n\n  function openPagefind() {\n    const searchDiv = document.getElementById(\"search\");\n    const search = searchDiv.querySelector(\"input\");\n    setTimeout(() => {\n      search.focus();\n    }, 0);\n    backdrop?.classList.remove(\"invisible\");\n    backdrop?.classList.add(\"visible\");\n  }\n\n  function closePagefind() {\n    const search = document.getElementById(\"search\");\n    search.value = \"\";\n    backdrop?.classList.remove(\"visible\");\n    backdrop?.classList.add(\"invisible\");\n  }\n\n  // open pagefind\n  ase?.addEventListener(\"click\", () => {\n    openPagefind();\n  });\n  // a pseudo pagefind cmd + k\n  document.addEventListener(\"keydown\", (e) => {\n    if (e.key === \"/\") {\n      e.preventDefault();\n      openPagefind();\n    } else if ((e.metaKey || e.ctrlKey) && e.key === \"k\") {\n      e.preventDefault();\n      openPagefind();\n    }\n  });\n\n  // close pagefind\n  document.addEventListener(\"keydown\", (e) => {\n    if (e.key === \"Escape\" || e.keyCode === 27) {\n      closePagefind();\n    }\n  });\n\n  backdrop?.addEventListener(\"click\", (event) => {\n    if (!event.target.closest(\"#pagefind-container\")) {\n      closePagefind();\n    }\n  });\n\n  // prevent form submission\n  const form = document.getElementById(\"form\");\n  form?.addEventListener(\"submit\", (event) => {\n    event.preventDefault();\n  });\n\n  // Custom search function\n  function debounce(func, wait) {\n    let timeout;\n    return function executedFunction(...args) {\n      const later = () => {\n        clearTimeout(timeout);\n        func(...args);\n      };\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n\n  function customSearch(query) {\n    const lowercaseQuery = query.toLowerCase();\n    const matchingPages = navigationPages.filter(page => \n      page.title.toLowerCase().includes(lowercaseQuery)\n    );\n\n    const searchResults = document.querySelector('.pagefind-ui__results');\n    if (!searchResults) return; // Ensure the element exists\n    \n    // Clear existing navigation results\n    const existingNavigationResults = searchResults.querySelectorAll('.navigation-result');\n    existingNavigationResults.forEach(result => result.remove());\n\n    // Add matching navigation pages to the top of the results\n    matchingPages.forEach(page => {\n      const navigationResult = document.createElement('div');\n      navigationResult.className = 'pagefind-ui__result navigation-result';\n      navigationResult.innerHTML = `\n        <h3 class=\"pagefind-ui__result-title\">\n          <a href=\"${page.url}\">${page.title}</a>\n        </h3>\n        <p class=\"pagefind-ui__result-excerpt\">Navigate to ${page.title} page</p>\n      `;\n      searchResults.insertBefore(navigationResult, searchResults.firstChild);\n    });\n  }\n\n  // Ensure PageFind is initialized before adding event listeners\n  window.addEventListener('load', () => {\n    const searchInput = document.querySelector('.pagefind-ui__search-input');\n    if (searchInput) {\n      const debouncedCustomSearch = debounce(customSearch, 300);\n      searchInput.addEventListener('input', (e) => {\n        debouncedCustomSearch(e.target.value);\n      });\n    }\n  });\n\n  // Override the default search behavior\n  const searchInput = document.querySelector('.pagefind-ui__search-input');\n  searchInput.addEventListener('input', (e) => {\n    setTimeout(() => {\n      customSearch(e.target.value);\n    }, 100); // Small delay to ensure PageFind has updated the results\n  });\n\n  // Update the current time every second\n  function updateTime() {\n    const now = new Date();\n    document.getElementById(\"current-time\").textContent = now.toLocaleTimeString();\n  }\n  setInterval(updateTime, 1000);\n  updateTime(); // Initial call to set time immediately\n</script>\n\n<style is:global>\n  :root {\n    --pagefind-ui-scale: 0.75;\n    --pagefind-ui-border-width: 1px;\n    --pagefind-ui-border-radius: 3px;\n    --pagefind-ui-font: \"Geist\", sans-serif;\n    --pagefind-ui-primary: transparent;\n    --pagefind-ui-text: #3d3d3d;\n    --pagefind-ui-background: transparent;\n    --pagefind-ui-border: #d0d0d0;\n    --pagefind-ui-tag: transparent !importantS;\n  }\n\n  .dark {\n    --pagefind-ui-primary: #d4d4d4;\n    --pagefind-ui-text: #d4d4d4;\n    --pagefind-ui-background: transparent;\n    --pagefind-ui-border: #404040;\n  }\n\n  #search input {\n    /* color: ghostwhite; */\n    font-weight: normal;\n    background: transparent;\n  }\n\n  #search p {\n    font-weight: normal;\n  }\n\n  #search .pagefind-ui__result-title {\n    font-weight: 600;\n  }\n\n  #search .pagefind-ui__message {\n    padding: 0;\n    padding-bottom: 0.75rem;\n  }\n  #pagefind-container {\n    background: transparent;\n  }\n\n  /* Update these styles for the highlight */\n  #search .pagefind-ui__result-excerpt mark {\n    background-color: transparent;\n    outline: 1px solid currentColor;\n    outline-offset: 1px;\n    border-radius: 2px;\n    color: inherit;\n    mix-blend-mode: difference;\n  }\n\n  .dark #search .pagefind-ui__result-excerpt mark {\n    /* Remove this rule as it's no longer needed */\n  }\n</style>\n","---\n\n---\n\n<quasar-background></quasar-background>\n\n<style>\n  quasar-background {\n    position: fixed;\n    inset: 0;\n    z-index: -1;\n  }\n\n  @keyframes shimmer {\n    0% {\n      --shimmer: 0deg;\n    }\n    100% {\n      --shimmer: 360deg;\n    }\n  }\n\n  @keyframes shine {\n    0% {\n      opacity: 0;\n    }\n    15% {\n      opacity: 1;\n    }\n    55% {\n      opacity: 1;\n    }\n    100% {\n      opacity: 0;\n    }\n  }\n\n  .shimmer {\n    position: absolute;\n    inset: -40px;\n    border-radius: inherit;\n    mask-image: conic-gradient(\n      from var(--shimmer, 0deg),\n      transparent 0%,\n      transparent 10%,\n      black 36%,\n      black 45%,\n      transparent 50%,\n      transparent 60%,\n      black 85%,\n      black 95%,\n      transparent 100%\n    );\n    mask-size: cover;\n    mix-blend-mode: plus-lighter;\n    animation: shimmer 1s linear infinite both;\n    opacity: 0;\n    pointer-events: none;\n  }\n\n  .shimmer::before,\n  .shimmer::after {\n    content: \"\";\n    border-radius: inherit;\n    position: absolute;\n    inset: 40px;\n    pointer-events: none;\n  }\n\n  .shimmer::before {\n    box-shadow:\n      0 0 3px 2px hsl(222deg 20% 95%),\n      0 0 7px 4px hsl(222deg 20% 80%),\n      0 0 13px 4px hsl(222deg 50% 70%),\n      0 0 25px 5px hsl(222deg 100% 70%);\n    z-index: -1;\n  }\n\n  .shimmer::after {\n    box-shadow:\n      inset 0 0 0 1px hsl(222deg 70% 95%),\n      inset 0 0 2px 1px hsl(222deg 100% 80%),\n      inset 0 0 5px 2px hsl(222deg 100% 70%);\n    z-index: 2;\n  }\n\n  .shimmer-active {\n    animation: shine 1.2s ease-in 1 forwards;\n  }\n</style>\n\n<script>\n  import invariant from \"tiny-invariant\";\n\n  const COUNT = 800;\n  const SPEED = 0.1;\n\n  class Star {\n    x: number;\n    y: number;\n    z: number;\n    xPrev: number;\n    yPrev: number;\n\n    constructor(x = 0, y = 0, z = 0) {\n      this.x = x;\n      this.y = y;\n      this.z = z;\n      this.xPrev = x;\n      this.yPrev = y;\n    }\n\n    update(width: number, height: number, speed: number, deltaTime: number) {\n      this.xPrev = this.x;\n      this.yPrev = this.y;\n      this.z += speed * 0.0675 * deltaTime;\n      this.x += this.x * (speed * 0.0225) * this.z * deltaTime;\n      this.y += this.y * (speed * 0.0225) * this.z * deltaTime;\n      if (\n        this.x > width / 2 ||\n        this.x < -width / 2 ||\n        this.y > height / 2 ||\n        this.y < -height / 2\n      ) {\n        this.x = Math.random() * width - width / 2;\n        this.y = Math.random() * height - height / 2;\n        this.xPrev = this.x;\n        this.yPrev = this.y;\n        this.z = 0;\n      }\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n      const alpha = Math.min(this.z, 1);\n      ctx.strokeStyle = `rgba(255, 255, 255, ${alpha})`;\n      ctx.lineWidth = Math.min(this.z * 0.5, 2);\n      ctx.beginPath();\n      ctx.moveTo(this.x, this.y);\n      ctx.lineTo(this.xPrev, this.yPrev);\n      ctx.stroke();\n    }\n  }\n\n  class QuasarBackground extends HTMLElement {\n    private canvas: HTMLCanvasElement;\n    private ctx: CanvasRenderingContext2D;\n    private stars: Star[];\n    private rafId: number;\n    private lastTime: number;\n    private visualizerCanvas: HTMLCanvasElement;\n    private visualizerCtx: CanvasRenderingContext2D;\n    private audio: number[];\n    private svgContainer: HTMLDivElement;\n    private shimmerElement: HTMLDivElement;\n\n    constructor() {\n      super();\n      this.canvas = document.createElement(\"canvas\");\n      this.ctx = this.canvas.getContext(\"2d\")!;\n      this.stars = Array.from({ length: COUNT }, () => new Star(0, 0, 0));\n      this.rafId = 0;\n      this.lastTime = 0;\n\n      this.visualizerCanvas = document.createElement(\"canvas\");\n      this.visualizerCtx = this.visualizerCanvas.getContext(\"2d\")!;\n      this.audio = Array(400)\n        .fill(null)\n        .map(() => Math.random());\n\n      this.svgContainer = document.createElement(\"div\");\n      this.svgContainer.style.position = \"absolute\";\n      this.svgContainer.style.display = \"flex\";\n      this.svgContainer.style.flexDirection = \"column\";\n      this.svgContainer.style.alignItems = \"center\";\n      this.svgContainer.style.justifyContent = \"center\";\n      this.svgContainer.style.pointerEvents = \"none\";\n\n      for (let i = 0; i < 3; i++) {\n        const svgElement = document.createElementNS(\n          \"http://www.w3.org/2000/svg\",\n          \"svg\",\n        );\n        svgElement.innerHTML = `\n          <defs>\n            <clipPath id=\"lineMdWatchLoop0\">\n              <rect width=\"24\" height=\"12\"></rect>\n            </clipPath>\n            <symbol id=\"lineMdWatchLoop1\">\n              <path\n                fill=\"none\"\n                stroke=\"#fff\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M23 16.5C23 10.4249 18.0751 5.5 12 5.5C5.92487 5.5 1 10.4249 1 16.5z\"\n                clip-path=\"url(#lineMdWatchLoop0)\"\n              >\n                <animate\n                  attributeName=\"d\"\n                  dur=\"3.78s\"\n                  keyTimes=\"0;0.07;0.93;1\"\n                  repeatCount=\"indefinite\"\n                  values=\"M23 16.5C23 11.5 18.0751 12 12 12C5.92487 12 1 11.5 1 16.5z;M23 16.5C23 10.4249 18.0751 5.5 12 5.5C5.92487 5.5 1 10.4249 1 16.5z;M23 16.5C23 10.4249 18.0751 5.5 12 5.5C5.92487 5.5 1 10.4249 1 16.5z;M23 16.5C23 11.5 18.0751 12 12 12C5.92487 12 1 11.5 1 16.5z\"\n                >\n                </animate>\n              </path>\n            </symbol>\n            <mask id=\"lineMdWatchLoop2\">\n              <use href=\"#lineMdWatchLoop1\"></use>\n              <use href=\"#lineMdWatchLoop1\" transform=\"rotate(180 12 12)\"></use>\n              <circle cx=\"12\" cy=\"12\" r=\"0\" fill=\"#fff\">\n                <animate\n                  attributeName=\"r\"\n                  dur=\"3.78s\"\n                  keyTimes=\"0;0.03;0.97;1\"\n                  repeatCount=\"indefinite\"\n                  values=\"0;3;3;0\"\n                >\n                </animate>\n              </circle>\n            </mask>\n          </defs>\n\n          <rect\n            width=\"24\"\n            height=\"24\"\n            fill=\"currentColor\"\n            mask=\"url(#lineMdWatchLoop2)\"\n          >\n          </rect>\n        `;\n        svgElement.setAttribute(\"width\", \"2.1em\");\n        svgElement.setAttribute(\"height\", \"2.1em\");\n        svgElement.setAttribute(\"viewBox\", \"0 0 24 24\");\n        svgElement.style.margin = \"5px 0\";\n\n        if (i === 1) {\n          const shimmerContainer = document.createElement(\"div\");\n          shimmerContainer.style.position = \"relative\";\n          shimmerContainer.appendChild(svgElement);\n\n          this.shimmerElement = document.createElement(\"div\");\n          this.shimmerElement.classList.add(\"shimmer\");\n          shimmerContainer.appendChild(this.shimmerElement);\n\n          this.svgContainer.appendChild(shimmerContainer);\n        } else {\n          this.svgContainer.appendChild(svgElement);\n        }\n      }\n\n      this.startShimmerCycle();\n    }\n\n    startShimmerCycle() {\n      setInterval(() => {\n        this.shimmerElement.classList.add(\"shimmer-active\");\n        setTimeout(() => {\n          this.shimmerElement.classList.remove(\"shimmer-active\");\n        }, 1200);\n      }, 3400);\n    }\n\n    connectedCallback() {\n      this.appendChild(this.canvas);\n      this.appendChild(this.visualizerCanvas);\n      this.appendChild(this.svgContainer);\n\n      const resizeObserver = new ResizeObserver(() => this.setup());\n      resizeObserver.observe(this);\n\n      this.setup();\n    }\n\n    disconnectedCallback() {\n      cancelAnimationFrame(this.rafId);\n    }\n\n    setup() {\n      this.rafId > 0 && cancelAnimationFrame(this.rafId);\n\n      const { clientWidth: width, clientHeight: height } = this;\n      const dpr = window.devicePixelRatio || 1;\n      this.canvas.width = width * dpr;\n      this.canvas.height = height * dpr;\n      this.canvas.style.width = `${width}px`;\n      this.canvas.style.height = `${height}px`;\n      this.ctx.scale(dpr, dpr);\n\n      this.visualizerCanvas.width = width;\n      this.visualizerCanvas.height = height;\n      this.visualizerCanvas.style.position = \"absolute\";\n      this.visualizerCanvas.style.top = \"0\";\n      this.visualizerCanvas.style.left = \"0\";\n\n      for (const star of this.stars) {\n        star.x = Math.random() * width - width / 2;\n        star.y = Math.random() * height - height / 2;\n        star.z = 0;\n      }\n\n      this.ctx.translate(width / 2, height / 2);\n      this.ctx.fillStyle = \"rgba(0, 0, 0, 0.2)\";\n\n      this.lastTime = performance.now();\n      this.rafId = requestAnimationFrame((time) => this.frame(time));\n    }\n\n    frame(currentTime: number) {\n      const { clientWidth: width, clientHeight: height } = this;\n\n      const deltaTime = (currentTime - this.lastTime) / 16.67;\n      this.lastTime = currentTime;\n\n      // Update and draw stars\n      this.ctx.fillRect(-width / 2, -height / 2, width, height);\n      for (const star of this.stars) {\n        star.update(width, height, SPEED, deltaTime);\n        star.draw(this.ctx);\n      }\n\n      // Update and draw visualizer\n      this.updateVisualizer();\n      this.drawVisualizer();\n\n      this.rafId = requestAnimationFrame((time) => this.frame(time));\n    }\n\n    updateVisualizer() {\n      this.audio = this.audio.map((x) =>\n        Math.random() > 0.5 ? Math.max(x - 0.01, 0.02) : Math.min(x + 0.01, 1),\n      );\n    }\n\n    drawVisualizer() {\n      const { width, height } = this.visualizerCanvas;\n      const visualizer = {\n        bar: { width: 1, height: 40 },\n        radius: 60,\n      };\n\n      const spacing = 360 / this.audio.length;\n      const origin = {\n        x: width / 2,\n        y: height / 2,\n      };\n\n      this.visualizerCtx.clearRect(0, 0, width, height);\n      this.visualizerCtx.fillStyle = \"rgba(255, 255, 255, 0.7)\";\n\n      for (const [i, piece] of this.audio.entries()) {\n        const degrees = i * spacing;\n        const radians = (degrees / 180) * Math.PI;\n\n        this.visualizerCtx.save();\n        this.visualizerCtx.translate(origin.x, origin.y);\n        this.visualizerCtx.rotate(radians);\n        this.visualizerCtx.fillRect(\n          visualizer.bar.width / -2,\n          visualizer.radius,\n          visualizer.bar.width,\n          visualizer.bar.height * piece,\n        );\n        this.visualizerCtx.restore();\n      }\n\n      // Position the SVG container in the center of the visualizer circle\n      const containerSize = 100; // Adjust this value to change the size of the icon group\n      this.svgContainer.style.width = `${containerSize}px`;\n      this.svgContainer.style.height = `${containerSize}px`;\n      this.svgContainer.style.left = `${origin.x - containerSize / 2}px`;\n      this.svgContainer.style.top = `${origin.y - containerSize / 2}px`;\n    }\n  }\n\n  customElements.define(\"quasar-background\", QuasarBackground);\n</script>\n","---\nimport Head from \"@components/Head.astro\";\nimport Header from \"@components/Header.astro\";\nimport Footer from \"@components/Footer.astro\";\nimport PageFind from \"@components/PageFind.astro\";\nimport { SITE } from \"@consts\";\n// import Visual from \"@/components/Visual.astro\"\nimport Quasar from \"@components/Quasar.astro\";\n\ntype Props = {\n  title: string;\n  description: string;\n};\n\nconst { title, description } = Astro.props;\n---\n\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    <Head title={`${title} | ${SITE.TITLE}`} description={description} />\n  </head>\n  <body>\n    <Quasar />\n\n    <Header />\n    <main>\n      <slot />\n    </main>\n    <Footer />\n\n    <PageFind />\n    <style>\n      body {\n        position: relative;\n      }\n      .content-wrapper {\n        position: relative;\n        z-index: 1;\n      }\n    </style>\n  </body>\n</html>\n"],"names":["$$createComponent","Astro","$$Astro","$$render","$$addAttribute","$$createAstro","_a","__template","$$renderComponent","ViewTransitions","$$maybeRenderHead","$$renderSlot","Container","$$result","NowPlaying","$$defineScriptVars","$$createTransitionScope","SysInfo","BackToTop","props","Search","Head","$$renderHead","Quasar","Header","Footer","PageFind"],"mappings":"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,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,MAAA,CAAA,WAAA,CAAA,CAAA,KAAA,CAAA,CAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,QAAA,CAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,EAAA,CAAA,KAAA,CAAA,EAAA,CAAA,KAAA,CAAA,CAAA,CAAA,KAAA,CAAA,OAAA,CAAA,EAAA,CAAA,KAAA,CAAA,CAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,CAAA,EAAA,CAAA,IAAA,CAAA,KAAA,CAAA,EAAA,CAAA,KAAA,CAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,EAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA,QAAA,CAAA,CAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,KAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,KAAA,CAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,MAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA,QAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA,KAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA,OAAA,CAAA,GAAA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AAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,KAAA,CAAA,CAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA,KAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,GAAA,CAAA,KAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,KAAA,CAAA,CAAA,GAAA,CAAA,CAAA,MAAA,CAAA,CAAA,GAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,oBAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,MAAA,CAAA,CAAA,aAAA,CAAA,CAAA,EAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,MAAA,CAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,oBAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,MAAA,CAAA,CAAA,aAAA,CAAA,CAAA,EAAA,CAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAA,CAAA,oBAAA,CAAA,CAAA,SAAA,CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAA,CAAA,oBAAA,CAAA,CAAA,SAAA,CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAA,CAAA,oBAAA,CAAA,CAAA,SAAA,CAAA,CAAA,MAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAA,CAAA,oBAAA,CAAA,CAAA,SAAA,CAAA,CAAA,MAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAA,MAAA,CAAA,CAAA,aAAA,CAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,gBAAA,CAAA,aAAA,CAAA,CAAA,SAAA,CAAA,CAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA,WAAA,CAAA,CAAA,UAAA,CAAA,CAAA,IAAA,CAAA,CAAA,MAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,gBAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,MAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,CAAA,MAAA,CAAA,UAAA,CAAA,CAAA,EAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA,WAAA,CAAA,CAAA,UAAA,CAAA,CAAA,MAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,MAAA,CAAA,CAAA,aAAA,CAAA,CAAA,MAAA,CAAA,UAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA,oBAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,MAAA,CAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,MAAA,CAAA,CAAA,GAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,CAAA,EAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAA,MAAA,CAAA,CAAA,aAAA,CAAA,CAAA,OAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,GAAA,CAAA,CAAA,oBAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,GAAA,CAAA,CAAA,oBAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAoHpC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AAtIJ,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,UAAA,CAAA,MAAA,CAAA,EAAA,CAAA,GAAA,CAAA,UAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA;;ACGO,QAAA,CAAS,IAAM,CAAA,CAAA,MAAsB,CAAA,CAAA,CAAA;AAC1C,CAAO,CAAA,MAAA,CAAA,OAAA,CAAQ,IAAK,CAAA,MAAM,CAAC,CAAA,CAAA;AAC7B,CAAA;AAUO,QAAS,CAAA,YAAY,IAAc,CAAA,CAAA,CAAA;AACxC,CAAA,CAAA,KAAA,CAAM,QAAW,CAAA,CAAA,CAAA,IAAA,CAAK,OAAQ,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAY,CAAE,CAAA,CAAA,CAAA;AAC5C,CAAA,CAAA,KAAA,CAAM,SAAY,CAAA,CAAA,CAAA,QAAA,CAAS,KAAM,CAAA,CAAK,CAAA,CAAA,CAAA,CAAA,CAAE,CAAA,MAAA,CAAA;AACxC,CAAA,CAAA,KAAM,CAAA,kBAAsB,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAAY,GAAM,CAAA,CAAA,CAAA,CAAA,CAAA,CAAG,OAAQ,CAAA,CAAA,CAAA;AACzD,CAAA,CAAA,OAAO,GAAG,kBAAkB,CAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAA;AAC9B,CAAA;AAEO,QAAA,CAAS,aAAwB,CAAA,CAAA,CAAA,CAAA;AACtC,CAAA,CAAA,KAAA,CAAM,KAAQ,CAAA,CAAA,CAAA,CAAC,CAAA,KAAA,CAAS,EAAA,CAAA,MAAA,CAAA,CAAA,CAAU,CAAO,KAAA,CAAA,CAAA,CAAA;AACzC,CAAA,CAAA,KAAA,CAAM,OAAU,CAAA,CAAA,CAAA,CAAC,CAAA,CAAA,CAAK,EAAA,CAAA,CAAA,CAAA,CAAA,CAAK,CAAG,CAAA,CAAA,CAAA,CAAA;AAC9B,CAAA,CAAM,MAAA,MAAA,CAAA,CAAA,CAAS,KAAK,MAAO,EAAA,CAAA;AAC3B,CAAA,CAAA,GAAI,CAAA,GAAM,CAAA,CAAA,CAAA,CAAA,CAAA;AACV,CAAA,CAAA,GAAA,CAAA,CAAA,GAAA,CAAS,CAAI,CAAA,CAAA,CAAA,CAAA,CAAG,CAAA,CAAI,CAAA,CAAA,CAAA,OAAA,CAAQ,OAAQ,CAAA,CAAK,EAAA,CAAA,CAAA,CAAA;AACvC,CAAA,CAAA,CAAA,CAAA,GAAA,CAAO,CAAA,CAAA,CAAA,QAAQ,CAAC,CAAA,CAAA;AAChB,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAI,MAAS,CAAA,CAAA,CAAA,GAAA,CAAA,CAAY,OAAA,KAAA,CAAM,CAAC,CAAA,CAAA;AAAA,CAClC,CAAA,CAAA;AACA,CAAA,CAAA,MAAO,CAAA,MAAM,CAAC,CAAA,CAAA;AAChB,CAAA;;AC1BA,KAAM,CAAA,cAAiB,GAAA,GAAA,CAAA;AAAA,CAAA,CACreAAiB,CAAA,CAAA,CAAA;AAAA,CACf,CAAA,CAAA,CAAA,CAAA,CAAA,OAAS,EAAA,CAAA,OAAA,CAAA,CAAA;AAAA,CACT,CAAA,CAAA,CAAA,CAAA,CAAA,IAAM,EAAA,CAAA,OAAA,CAAA;AAAA,CACR,CAAA,CAAA,CAAA,CAAA;AAAA,CACF,CAAA,CAAA;AACF,CAAA,CAAA;AAQA,KAAA,CAAM,SAAS,KAAM,CAAA,UAAA,CAAA;AAAA,CAAA,CACnB,CAAC,CAAE,CAAA,SAAA,CAAW,CAAA,OAAS,EAAA,IAAA,CAAA,CAAM,UAAU,KAAO,CAAA,CAAA,CAAA,CAAA,CAAG,KAAM,CAAA,CAAA,CAAA,CAAG,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAChE,CAAM,CAAA,CAAA,CAAA,KAAA,CAAA,IAAA,CAAO,CAAA,CAAA,UAAU,IAAO,CAAA,CAAA,CAAA,QAAA,CAAA;AAC9B,CAAA,CAAA,CAAA,CACE,uBAAA,GAAA,CAAA;AAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAC,IAAA,CAAA;AAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CACC,SAAA,CAAA,CAAW,GAAG,cAAe,CAAA,CAAA,CAAE,SAAS,IAAM,CAAA,CAAA,SAAA,CAAA,CAAW,CAAC,CAAA,CAAA;AAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAC1D,GAAA,CAAA;AAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CACC,GAAG,KAAA;AAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAA,CAAA,CAAA,CAAA,CAAA,CACN,CAAA;AAAA,CAEJ,CAAA,CAAA;AACF,CAAA,CAAA;AACA,MAAA,CAAO,WAAc,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA;;AC5CrB,QAAA,CAAS,QAAS,CAAA,CAAA;AAAA,CAAA,CAChB,SAAA,CAAA;AAAA,CAAA,CACA,UAAA,CAAA;AAAA,CACA,CAAA,eAAkB,GAAA,IAAA,CAAA;AAAA,CAAA,CAClB,GAAG,KAAA;AACL,CAAkB,CAAA,CAAA,CAAA;AAChB,CAAA,CACE,uBAAA,GAAA,CAAA;AAAA,CAAA,CAAA,CAAA,CAAC,SAAA,CAAA;AAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CACC,eaAAe,EAAA,CAAA,IAAA,CAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA;AAAA,CACf,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAK,EAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,CAAA;AAAA,CACL,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,UAAY,EAAA,EAAA,CAAA;AAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CACV,cAAe,CAAA,CAAA,CAAE,OAAS,CAAA,CAAA,CAAA,OAAA,CAAA,EAAW,CAAA,CAAA;AAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CACrC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,WAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,EAAA,CAAA,KAAA,CAAA,OAAA,CAAA,GAAA,CAAA;AAAA,CACF,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAA,CACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,mBAAqB,EAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA;AAAA,CACrB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,eAAiB,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AAAA,CACjB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAO,EAAA,CAAA,CAAA,CAAA,IAAA,CAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAA,CACP,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,QAAU,EAAA,CAAA,IAAA,CAAA,CAAA;AAAA,CACV,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SACE,EAAA,CAAA,IAAA,CAAA,KAAA,CAAA,UAAA,CAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AAAA,CACF,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAK,EAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AAAA,CACL,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAM,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,GAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,GAAA,CAAA,OAAA,CAAA,CAAA,CAAA,EAAA,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA,EAAA,CAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAA,CACN,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAK,EAAA,EAAA,CAAA;AAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CACH,cAAe,CAAA,CAAA,CAAE,OAAS,CAAA,CAAA,CAAA,KAAA,CAAA,EAAS,CAAA,CAAA;AAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CACnC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA;AAAA,CACF,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAA,CACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,aAAe,EAAA,CAAA,GAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA;AAAA,CACfc,EAAA,CAAA,IAAA,CAAA,KAAA,CAAA,UAAA,CAAA,OAAA,CAAA,EAAA,CAAA,CAAA;AAAA,CACd,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,gBACE,EAAA,CAAA,IAAA,CAAA,QAAA,CAAA,EAAA,CAAA,MAAA,CAAA,IAAA,CAAA,QAAA,CAAA,IAAA,CAAA,MAAA,CAAA,UAAA,CAAA,CAAA;AAAA,CACF,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,UAAY,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CACZ,GAAG,UAAA;AAAA,CACL,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CACA,UAAY,CAAA,CAAA,CAAA;AAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CACV,QAAA,CAAU,CAAA,CAAC,CAAE,CAAA,CAAA,CAAA,CAAGC,OAAY,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAC,WAAY,CAAA,CAAA,CAAA,CAAA,SAAA,CAAU,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAU,EAAA,CAAA,CAAA;AAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAC7D,SAAA,CAAW,CAAA,CAAC,CAAE,CAAA,CAAA,CAAA,CAAGA,OAAY,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAC,YAAa,CAAA,CAAA,CAAA,CAAA,SAAA,CAAU,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAU,EAAA,CAAA;AAAA,CACjE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CACC,GAAG,KAAA;AAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAA,CAAA,CAAA,CACN,CAAA;AAEJ,CAAA;AACA,QAAA,CAAS,WAAc,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,CAAA;;AC7DvB,KAAA,CAAAjB,SAAA,CAAAG,CAAAA,CAAAA,YAAA,CAAA,KAAA,CAAA,CAAA,CAAA,UAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,CAAA;AAAA,KAAA,CAAA,CAAA,CAAA,MAAA,CAAAL,CAAAA,CAAAA,eAAA,CAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAA,CAAA,CAAA,KAAAC,CAAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,WAAA,CAAAC,CAAAA,CAAAA,KAAAA,CAAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA;AAAAD,CAAAA,CAAAA,MAAAA,CAAA,IAAA,CAAA,CAAA,CAAA,QAAA,CAAA;AAUM,CAAA,CAAA,MAAA,CAAE,CAAA,GAAI,CAAA,SAAW,EAAA,KAAA,CAAA,CAAO,YAAY,EAAC,KAAMA,MAAM,CAAA,KAAA,CAAA;AACvD,CAAM,CAAA,KAAA,CAAA,UAAA,CAAa,CAAA,CAAA,GAAG,CAAwB,CAAA,CAAA,CAAA,QAAA,CAAA,CAAA,CAAA;AAX9C,CAAA,CAAA,MAAAE,CAAAA,cAAA,CAAA,CAAA,CAAAO,eAAA,CAAA,CAAA,OAAAN,YAeM,CAAA,EAAA,CAAA,CAfN,CAAA,EAAA,CAAA,CAAA,GAAAA,YAgBc,CAAA,CAAC,SAAW,CAAA,CAAA,CAAA,QAAA,CAAA,IAAA,CAhB1B,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,QAAA,CAAA,EAAA,CAAAA,CAAAA,YAAA,CAkBoB,UAlBpB,CAAA,CAAA,CAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAAA,CAAAA,aAmBc,KAnBd,CAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAAA,CAAAA,aAoBmB,IAAK,CAAA,SAAA,CAAU,SApBlC,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,EAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,UAAA,CAAA,MAAA,CAAA,EAAA,CAAA,YAAA,CAAA,KAAA,CAAA,QAAA,CAAA,GAAA,CAAA,UAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA;;;;;;ACAA,KAAA,CAAA,CAAA,CAAA,QAAA,CAAAJ,CAAAA,CAAAA,eAAA,CAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAMA,CAAA,CAAA,KAAA,CAAM,eAAkB,CAAA,CAAA,CAAA,CAAA;CACtB,CAAA,CAAA,CAAA,CAAA,CAAE,KAAA,CAAO,CAAA,CAAA,IAAA,CAAQ,EAAA,GAAA,CAAA,CAAK,GAAI,CAAA,CAAA,CAAA;CAC1B,CAAA,CAAA,CAAA,CAAA,CAAE,KAAA,CAAO,CAAA,CAAA,MAAA,CAAU,EAAA,GAAA,CAAA,CAAK,SAAU,CAAA,CAAA,CAAA;CAClC,CAAA,CAAA,CAAA,CAAA,CAAE,KAAA,CAAO,CAAA,CAAA,KAAA,CAAS,EAAA,GAAA,CAAA,CAAK,QAAS,CAAA,CAAA,CAAA;CAChC,CAAA,CAAA,CAAA,CAAA,CAAE,KAAA,CAAO,CAAA,CAAA,GAAA,CAAO,EAAA,GAAA,CAAA,CAAK,MAAO,CAAA,CAAA;;AAE9B,CAAA,CAAA,CAAA,CAAA;AAZA,CAAA,CAAA,MAAA,CAAAG,2BAAA,UAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA,QAAA,CAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,IAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,2OAyBK,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,KAAA,CAAA,CAAA,IAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA,QAAA,CAAA,SAAA,CAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,WAAA,CAAA,GAAA,CAAA,MAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAaI,YAEF,CAxCP,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,GAAA,CAAA,KAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,EAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,KAAA,CAAA,IAAA,CAAA,EAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,CAAA,CAAA,GAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA,KAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA,QAAA,CAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,IAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA,QAAA,CAAA,SAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,CAAA,EAAA,CAAA,IAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA,CAAA,OAAA,CAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,MAAA,CAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,CAAA,EAAA,CAAA,IAAA,CAAA,EAAA,CAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAyBK,0HAaI,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAEF,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,GAAA,CAAA,KAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,EAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,KAAA,CAAA,IAAA,CAAA,EAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,CAAA,CAAA,GAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA,KAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAxCP,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAAO,eAAA,CAAA,CAAA,CAAAN,CAAAA,YAAA,CAAAY,sBACoB,QAAU,CAAA,CAAA,CAAA,QAAA,CAD9B,EAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,UAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAAR,eAAA,CAAA,CAAA,CAAA,MAAA,EAAA,UAAAY,QAAA,CAAA,CAAA,CAAA,CA0BM,MAAI,QACJ,CAAA,CAAA,CAAA,SAAA,CAAA,EAAW,eACX,WAAW,CAAA,CAAA,CAAA;CAAA,CAAA,CAAA,CAAA,UAAA,EAAA,IAAA,CAAA;CAAA,CAAA,CAAA,CAAA,aAAA,EAAA,EAAA,CAAA;CAAA,CAAA,CAAA,CAAA,WAAA,EAAA,KAAA;AAAA,CAAA,CAAA,CAAA,CAHZ,CAAA,CAzBL,CAAAZ,CAAAA,eAAA,CAAA,UAAA,CAAA,QAAA,CAAA,CAAA,CAAA,QAAA,CAAA,CAAA,CAsCS,CAAA,CAAA,EAtCTA,gBAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,UAAA,CAAA,CAAA,CAAAM,cAAA,EAwCO,GAxCPC,gBAAA,CAAA,CAAA,CAAA,gBAAA,CAAA,CAAA,CAAA,CAAA;AAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,UAAA,CAAA,MAAA,CAAA,EAAA,CAAA,GAAA,CAAA,UAAA,CAAA,QAAA,CAAA,KAAA,EAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA;;;ACAA,CAAA,CAAA,MAAA,CAAAZ,cAAA,CAAA,CAAA,CAAAK,eAAA,CAAA,CAAA,CAAA,QAAA,CAAA,MAAA,CAAA,UAAA,CAAA,CAAA,CAAA,mBAAA,CAAA,CAAA,CAAA,CAAA,yBAAA,CAAA,CAAA,IAAA,EAIqB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAJrB,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,UAAA,CAAA,MAAA,CAAA,EAAA,CAAA,GAAA,CAAA,UAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA;;ACAA,KAAA,CAAA,OAAA,CAAAH,CAAAA,CAAAA,YAAA,CAAA,KAAA,CAAA,CAAA,CAAA,UAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,CAAA;AAAA,KAAA,CAAA,CAAA,CAAA,MAAA,CAAAL,CAAAA,CAAAA,eAAA,CAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAA,CAAA,CAAA,KAAAC,CAAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,WAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA;AAAA,CAAA,CAAAA,OAAA,IAAA,CAAA,CAAA,CAAA,QAAA,CAAA;AAcA,CAAA,CAAA,KAAA,CAAM,CAAE,CAAA,KAAA,CAAO,CAAA,WAAY,EAAA,CAAIA,CAAAA,CAAAA,MAAM,CAAA,KAAA,CAAA;AAdrC,CAAA,CAAA,MAAAE,CAAAA,cAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA,QAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAAK,CAAAA,eAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAAa,CAAAA,CAAAA,CAAAA,KAAA,CAAA,CAAA,CAoBU,CAAA,KAAA,CAAA,CAAA,CAAO,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAA4B,eAAa,WApB1D,CAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA,QAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAoBK,CAAA,CAAA,CApBLC,CAAAA,UAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA,QAAA,CAAA,CAAA,CAAAd,CAAAA,eAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAAe,CAAAA,CAAAA,CAAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA,QAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAuBK,CAAA,CAAA,CAAA,CAAA,CAvBLf,eAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAAgB,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA,QAAA,CAAA,CAAA,CAAA,KAyBK,CAAA,CAAA,CAzBL,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA,QAAA,CAAA,CAAA,CAAAb,CAAAA,UAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,OAAA,CAAA,CA2BO,CAAA,CA3BP,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAAH,CAAAA,eAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAAiB,CAAAA,CAAAA,CAAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA,QAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CA6BK,CAAA,CAAA,CAAA,CAAA,CA7BLjB,eAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,YAAAkB,CAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA,QAAA,CAAA,CAAA,CAAA,IAAA,CA+BK,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AA/BL,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,UAAA,CAAA,MAAA,CAAA,EAAA,CAAA,GAAA,CAAA,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA;;","x_google_ignoreList":[1,12]}