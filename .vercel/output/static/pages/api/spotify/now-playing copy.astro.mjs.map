{"version":3,"file":"now-playing copy.astro.mjs","sources":["../../../../../../src/pages/api/spotify/now-playing copy.js"],"sourcesContent":["import { getNowPlaying } from '../../../utils/spotify';\n\nexport async function GET() {\n  try {\n    console.log('Fetching now playing data from Spotify API');\n    const response = await getNowPlaying();\n    console.log('Spotify API response status:', response.status);\n\n    if (response.status === 204 || response.status > 400) {\n      console.log('No song currently playing or error from Spotify API');\n      return new Response(JSON.stringify({ isPlaying: false }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const song = await response.json();\n    console.log('Spotify API response data:', song);\n\n    if (song.item === null) {\n      return new Response(JSON.stringify({ isPlaying: false }), {\n        status: 200,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    }\n\n    const isPlaying = song.is_playing;\n    const title = song.item.name;\n    const artist = song.item.artists.map((_artist) => _artist.name).join(', ');\n    const album = song.item.album.name;\n    const albumImageUrl = song.item.album.images[0].url;\n    const songUrl = song.item.external_urls.spotify;\n\n    return new Response(\n      JSON.stringify({\n        isPlaying,\n        title,\n        artist,\n        album,\n        albumImageUrl,\n        songUrl,\n      }),\n      {\n        status: 200,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n  } catch (error) {\n    console.error('Error in now-playing API route:', error);\n    return new Response(JSON.stringify({ isPlaying: false, error: error.message, stack: error.stack }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n"],"names":[],"mappings":"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"}