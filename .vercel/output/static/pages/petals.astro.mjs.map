{"version":3,"file":"petals.astro.mjs","sources":["../../../../src/components/PetalCard.astro","../../../../src/pages/petals/index.astro"],"sourcesContent":["---\nimport { Image } from 'astro:assets';\nimport type { CollectionEntry } from 'astro:content';\nimport FormattedDate from \"./FormattedDate.astro\";\nimport { readingTime } from \"@lib/utils\";\n\ninterface Props {\n  post: CollectionEntry<'petals'>;\n}\n\nconst { post } = Astro.props;\nconst { title, description, date } = post.data;\n\n// Find the first image in the markdown content\nlet imageSrc: string | null = null;\nconst imageRegex = /!\\[.*?\\]\\((.*?)\\)/;\nconst match = post.body.match(imageRegex);\nif (match && match[1]) {\n  imageSrc = match[1].startsWith('http') ? match[1] : `/src/assets/${match[1]}`;\n}\n\n---\n\n<div class=\"petal-card group relative overflow-hidden rounded-lg shadow-lg transition-all duration-300 h-full\" data-petal-card>\n  <a href={`/petals/${post.slug}/`} class=\"block w-full h-full\">\n    <div class=\"absolute inset-0 w-full h-full bg-transparent\">\n      {imageSrc ? (\n        <Image\n          src={imageSrc}\n          alt={`Image for ${title}`}\n          width={300}\n          height={200}\n          class=\"w-full h-full object-cover transition-transform duration-300 group-hover:scale-110 group-active:scale-110\"\n        />\n      ) : (\n        <div class=\"w-full h-full bg-transparent\"></div>\n      )}\n    </div>\n    <div class=\"relative p-1 bg-black bg-opacity-50 text-white h-full flex flex-col justify-between transition-opacity duration-300 group-hover:bg-opacity-70 group-active:bg-opacity-70\">\n      <div>\n        <h2 class=\"text-xs font-bold mb-0.5 line-clamp-1\">{title}</h2>\n        <p class=\"text-xs mb-1 line-clamp-2\">{description}</p>\n      </div>\n      <div class=\"text-xs opacity-0 group-hover:opacity-100 group-active:opacity-100 transition-opacity duration-300\">\n        <FormattedDate date={new Date(date)} />\n        <span class=\"mx-0.5\">â€¢</span>\n        <span>{readingTime(post.body)}</span>\n      </div>\n    </div>\n  </a>\n</div>\n\n<style>\n  .petal-card {\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\n    touch-action: none; /* Prevent scrolling on touch devices while dragging */\n    user-select: none; /* Prevent text selection during drag */\n  }\n\n  .petal-card:hover, .petal-card:active {\n    transform: scale(1.05);\n    box-shadow: 0 0 10px rgba(255, 255, 255, 0.3);\n    z-index: 10;\n  }\n</style>","---\nimport type { CollectionEntry } from 'astro:content';\nimport Layout from \"@layouts/Layout.astro\";\nimport Container from \"@components/Container.astro\";\nimport PetalCard from \"@components/PetalCard.astro\";\nimport { getCollection } from \"astro:content\";\nimport { getRandomSize } from \"@lib/utils\";\n\nconst posts: CollectionEntry<'petals'>[] = (await getCollection(\"petals\"))\n  .filter((post) => !post.data.draft)\n  .sort((a, b) => new Date(b.data.date).valueOf() - new Date(a.data.date).valueOf());\n---\n\n<Layout title=\"Petals Gallery\" description=\"A collection of my projects and experiments\">\n  <Container>\n    <!-- <h1 class=\"text-3xl font-bold mb-4\">Gallery:</h1> -->\n    <div class=\"petal-container\">\n      <div class=\"petal-grid\">\n        {posts.map((post: CollectionEntry<'petals'>) => (\n          <div class={`petal-item ${getRandomSize()}`}>\n            <PetalCard post={post} />\n          </div>\n        ))}\n      </div>\n    </div>\n  </Container>\n</Layout>\n\n<style>\n  .petal-container {\n    width: 340; /* Set fixed width */\n    height: 210; /* Set fixed height */\n    overflow: auto; /* Allow both horizontal and vertical scrolling */\n    padding: 0.25rem;\n    -webkit-overflow-scrolling: touch;\n    scrollbar-width: none;  /* Firefox */\n    -ms-overflow-style: none;  /* Internet Explorer 10+ */\n    border: 1px solid #ccc; /* Add border for boxed appearance */\n    border-radius: 8px; /* Rounded corners */\n  }\n\n  .petal-container::-webkit-scrollbar {\n    display: none;  /* WebKit */\n  }\n\n  .petal-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\n    grid-auto-flow: dense;\n    grid-gap: 0.25rem;\n    width: max-content;\n    padding: 1rem; /* Add padding for better spacing */\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); /* Add shadow for depth */\n  }\n\n  .petal-item {\n    break-inside: avoid;\n  }\n\n  .small {\n    grid-column: span 1;\n    grid-row: span 1;\n  }\n\n  .medium {\n    grid-column: span 2;\n    grid-row: span 2;\n  }\n\n  .large {\n    grid-column: span 3;\n    grid-row: span 3;\n  }\n\n  @media (max-width: 640px) {\n    .petal-grid {\n      grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));\n    }\n    .medium, .large {\n      grid-column: span 2;\n      grid-row: span 2;\n    }\n  }\n</style>\n\n<script>\n  // Update the type declaration for startViewTransition\n  declare global {\n    type UpdateCallback = () => Promise<void> | void;\n    interface Document {\n      startViewTransition?: (callbackOptions?: UpdateCallback) => ViewTransition;\n    }\n    interface ViewTransition {\n      finished: Promise<undefined>;\n      ready: Promise<undefined>;\n      updateCallbackDone: Promise<undefined>;\n    }\n  }\n\n  function adjustPetalLayout() {\n    const container = document.querySelector('.petal-container') as HTMLElement | null;\n    const grid = document.querySelector('.petal-grid') as HTMLElement | null;\n    const items = document.querySelectorAll('.petal-item');\n    \n    if (!container || !grid) return;\n\n    let columnCount = Math.floor(container.clientHeight / 100);\n    grid.style.gridTemplateRows = `repeat(${columnCount}, minmax(100px, 1fr))`;\n\n    // Use Array.from() for better performance\n    const totalWidth = Array.from(items).reduce((total, item) => {\n      return total + (item instanceof HTMLElement ? item.offsetWidth : 0);\n    }, 0);\n\n    grid.style.width = `${totalWidth}px`;\n  }\n\n  function initPetalLayout() {\n    adjustPetalLayout();\n    \n    const container = document.querySelector('.petal-container') as HTMLElement | null;\n    if (container) {\n      // Use passive event listener for better scrolling performance\n      container.addEventListener('scroll', () => {\n        requestAnimationFrame(adjustPetalLayout);\n      }, { passive: true });\n    }\n  }\n\n  function enableDragAndDrop() {\n    const items = document.querySelectorAll('.petal-item');\n    items.forEach(item => {\n      item.setAttribute('draggable', 'true');\n      item.addEventListener('dragstart', (e) => {\n        e.dataTransfer.setData('text/plain', e.target.outerHTML);\n        e.target.classList.add('dragging');\n      });\n      item.addEventListener('dragend', () => {\n        item.classList.remove('dragging');\n      });\n    });\n\n    const grid = document.querySelector('.petal-grid');\n    grid.addEventListener('dragover', (e) => {\n      e.preventDefault();\n      const draggingItem = document.querySelector('.dragging');\n      const afterElement = getDragAfterElement(grid, e.clientY);\n      if (afterElement == null) {\n        grid.appendChild(draggingItem);\n      } else {\n        grid.insertBefore(draggingItem, afterElement);\n      }\n    });\n  }\n\n  function getDragAfterElement(container, y) {\n    const draggableElements = [...container.querySelectorAll('.petal-item:not(.dragging)')];\n\n    return draggableElements.reduce((closest, child) => {\n      const box = child.getBoundingClientRect();\n      const offset = y - box.top - box.height / 2;\n      if (offset < 0 && offset > closest.offset) {\n        return { offset: offset, element: child };\n      } else {\n        return closest;\n      }\n    }, { offset: Number.NEGATIVE_INFINITY }).element;\n  }\n\n  // Use a single function for both DOMContentLoaded and astro:after-swap\n  function onLoad() {\n    initPetalLayout();\n    enableDragAndDrop(); // Enable drag and drop functionality\n    window.addEventListener('resize', adjustPetalLayout);\n  }\n\n  document.addEventListener('DOMContentLoaded', onLoad);\n\n  // Check for Astro's view transitions\n  if (document.startViewTransition) {\n    document.addEventListener('astro:after-swap', onLoad);\n  }\n</script>\n"],"names":["$$Astro","$$createAstro","$$createComponent","Astro","$$render","$$maybeRenderHead","$$addAttribute","$$renderComponent","Image","FormattedDate","Layout","$$result","Container","PetalCard"],"mappings":"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"}