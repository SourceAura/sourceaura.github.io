;!function(){try{var e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},n=(new e.Error).stack;n&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[n]="b83c7d63-0cad-48eb-8138-5d90cc1b6b5f",e._sentryDebugIdIdentifier="sentry-dbid-b83c7d63-0cad-48eb-8138-5d90cc1b6b5f")}catch(e){}}();import { $ as $$Container, a as $$Layout } from '../chunks/Layout_CjQuuQTj.mjs';
import { a as createComponent, r as renderTemplate, f as renderComponent, m as maybeRenderHead } from '../chunks/astro/server_Bkp0-z4m.mjs';
import 'kleur/colors';
/* empty css                                    */
export { renderers } from '../renderers.mjs';

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(raw || cooked.slice()) }));
var _a;
const $$Euthymia = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "Euthymia", "description": "Awakened to a Dream", "data-astro-cid-bqr4ieqk": true }, { "default": ($$result2) => renderTemplate` ${renderComponent($$result2, "Container", $$Container, { "data-astro-cid-bqr4ieqk": true }, { "default": ($$result3) => renderTemplate(_a || (_a = __template([" ", '<div class="game-container" data-astro-cid-bqr4ieqk> <div id="hud" class="hud" data-astro-cid-bqr4ieqk> <div class="hud-stats short" data-astro-cid-bqr4ieqk> <div class="hud-item" data-astro-cid-bqr4ieqk>\neuthymia: <span id="euthymiaLevel" data-astro-cid-bqr4ieqk>1</span> </div> <div class="hud-item" data-astro-cid-bqr4ieqk>focus: <span id="focus" data-astro-cid-bqr4ieqk>100</span></div> <div class="hud-item" data-astro-cid-bqr4ieqk>qi: <span id="qi" data-astro-cid-bqr4ieqk>100</span></div> <div class="hud-item" data-astro-cid-bqr4ieqk>xp: <span id="experience" data-astro-cid-bqr4ieqk>0</span></div> </div> </div> <div id="log" class="log" data-astro-cid-bqr4ieqk> <!-- Game log will be dynamically inserted here --> </div> <div class="actions bordered" data-astro-cid-bqr4ieqk> <button id="cultivate" data-astro-cid-bqr4ieqk>cultivate</button> <button id="meditate" data-astro-cid-bqr4ieqk>meditate</button> <button id="toggleInnovate" data-astro-cid-bqr4ieqk>innovate</button> <button id="explore" data-astro-cid-bqr4ieqk>explore</button> </div> </div>  <div id="innovateModal" class="modal" data-astro-cid-bqr4ieqk> <div class="modal-content" data-astro-cid-bqr4ieqk> <span class="close" id="closeInnovateModal" data-astro-cid-bqr4ieqk>&times;</span> <h2 data-astro-cid-bqr4ieqk>Innovate:</h2> <br data-astro-cid-bqr4ieqk> <div class="innovation" data-astro-cid-bqr4ieqk> <div id="innovateHerbs" class="innovate-item" data-astro-cid-bqr4ieqk></div> <div id="innovatePapyrus" class="innovate-item" data-astro-cid-bqr4ieqk></div> <div id="innovateCrystals" class="innovate-item" data-astro-cid-bqr4ieqk></div> <div id="innovateMateria" class="innovate-item" data-astro-cid-bqr4ieqk></div> <div id="innovateWands" class="innovate-item" data-astro-cid-bqr4ieqk></div> <div id="innovateTomes" class="innovate-item" data-astro-cid-bqr4ieqk></div> <div id="innovateTea" class="innovate-item" data-astro-cid-bqr4ieqk></div> </div> <br data-astro-cid-bqr4ieqk> <button id="toggleCrafting" data-astro-cid-bqr4ieqk>Toggle Crafting Interface</button> <div id="craftingContainer" class="crafting-list" style="display: none;" data-astro-cid-bqr4ieqk> <!-- Crafting items will be dynamically inserted here --> </div> </div> <div class="modal-background" data-astro-cid-bqr4ieqk> <h3 data-astro-cid-bqr4ieqk>Log:</h3> <div id="modalLog" class="modal-log" data-astro-cid-bqr4ieqk> <!-- Output log information displayed here --> </div> </div> </div>  <div id="cultivateModal" class="modal" data-astro-cid-bqr4ieqk> <div class="modal-content" data-astro-cid-bqr4ieqk> <span class="close" id="closeCultivateModal" data-astro-cid-bqr4ieqk>&times;</span> <h2 data-astro-cid-bqr4ieqk>Cultivate:</h2> <button id="performGarden" class="action" data-astro-cid-bqr4ieqk>garden</button> <button id="performMine" class="action" data-astro-cid-bqr4ieqk>mine</button> </div> <div class="modal-background" data-astro-cid-bqr4ieqk> <div id="modalLogCultivate" class="modal-log" data-astro-cid-bqr4ieqk> <!-- Output log information displayed here --> </div> </div> </div>  <div id="exploreModal" class="modal" data-astro-cid-bqr4ieqk> <div class="modal-content" data-astro-cid-bqr4ieqk> <span class="close" id="closeExploreModal" data-astro-cid-bqr4ieqk>&times;</span> <h2 data-astro-cid-bqr4ieqk>Explore Locations:</h2> <div id="exploreOptions" data-astro-cid-bqr4ieqk> <!-- Locations will be dynamically inserted here --> </div> </div> <div class="modal-background" data-astro-cid-bqr4ieqk> <div id="modalLogExplore" class="modal-log" data-astro-cid-bqr4ieqk> <!-- Output log information displayed here --> </div> </div> </div> <script>\n      document.addEventListener("DOMContentLoaded", function () {\n        let qi = 100;\n        let focus = 100;\n        let experience = 0;\n        let euthymiaLevel = 1;\n        let currentLocale = "einSof";\n\n        // collectable items\n        let herbs = {\n          amount: 0,\n          variations: { rosemary: 0, thyme: 0, sage: 0, basil: 0 },\n        };\n        let materia = {\n          amount: 0,\n          variations: { earth: 0, fire: 0, wind: 0, water: 0 },\n        };\n        let papyrus = { amount: 0, variations: { old: 0, new: 0 } };\n        let crystals = {\n          amount: 0,\n          variations: { amethyst: 0, opal: 0, citrine: 0, quartz: 0 },\n        };\n\n        // the adept/user\'s bag of items: inventory\n        let innovate = {\n          tea: { amount: 0, rarity: "common" },\n          wand: { amount: 0, rarity: "common" },\n          tome: { amount: 0, rarity: "common" },\n        };\n\n        // craftable items\n        const craftRecipes = {\n          tea: { herbs: 1, papyrus: 1, materia: 1, rarity: "common" },\n          wand: {\n            herbs: 3,\n            papyrus: 2,\n            crystals: 1,\n            materia: 1,\n            rarity: "common",\n          },\n          tome: {\n            herbs: 2,\n            papyrus: 3,\n            crystals: 1,\n            materia: 1,\n            rarity: "common",\n          },\n        };\n\n        // available locales the adept/user can astral project to\n        const locales = {\n          einSof: { name: "Ein Sof", unlocked: true },\n          1: { name: "Locale I: Tiphereth", unlocked: false },\n          2: { name: "Locale II: Binah", unlocked: false },\n          3: { name: "Locale III: Kether", unlocked: false },\n        };\n\n        // html constants\n        const log = document.getElementById("log");\n        const modalLog = document.getElementById("modalLog");\n        const modalLogCultivate = document.getElementById("modalLogCultivate");\n        const modalLogExplore = document.getElementById("modalLogExplore");\n        const focusDisplay = document.getElementById("focus");\n        const xpDisplay = document.getElementById("experience");\n        const euthymiaLevelDisplay = document.getElementById("euthymiaLevel");\n        const qiDisplay = document.getElementById("qi");\n        const meditateBtn = document.getElementById("meditate");\n        const cultivateBtn = document.getElementById("cultivate");\n        const toggleInnovateButton = document.getElementById("toggleInnovate");\n        const innovateModal = document.getElementById("innovateModal");\n        const cultivateModal = document.getElementById("cultivateModal");\n        const closeInnovateModal =\n          document.getElementById("closeInnovateModal");\n        const closeCultivateModal = document.getElementById(\n          "closeCultivateModal",\n        );\n        const performGardenButton = document.getElementById("performGarden");\n        const performMineButton = document.getElementById("performMine");\n        const toggleCraftingButton = document.getElementById("toggleCrafting");\n        const craftingContainer = document.getElementById("craftingContainer");\n        const exploreModal = document.getElementById("exploreModal");\n        const closeExploreModal = document.getElementById("closeExploreModal");\n        const exploreBtn = document.getElementById("explore");\n        const exploreOptions = document.getElementById("exploreOptions");\n\n        // initializations\n        let initialLog = true;\n\n        function updateHUD() {\n          focusDisplay.textContent = focus;\n          xpDisplay.textContent = experience;\n          euthymiaLevelDisplay.textContent = euthymiaLevel;\n          qiDisplay.textContent = qi;\n        }\n\n        function logMessage(message, logElement = log) {\n          if (initialLog) {\n            logElement.innerHTML = "";\n            initialLog = false;\n          }\n          const entry = document.createElement("div");\n          entry.className = "log-entry";\n          entry.textContent = message;\n          logElement.insertBefore(entry, logElement.firstChild);\n\n          const entries = Array.from(logElement.children);\n          if (entries.length > 3) {\n            entries.slice(3).forEach((e) => e.classList.add("fade-out"));\n            setTimeout(() => {\n              entries.slice(3).forEach((e) => {\n                if (e.parentElement === logElement) {\n                  logElement.removeChild(e);\n                }\n              });\n            }, 5000);\n          }\n        }\n\n        function updateCraftingInterface() {\n          // Update crafting items in innovate modal\n          document.getElementById("innovateHerbs").innerHTML =\n            `Herbs: ${herbs.amount}`;\n          document.getElementById("innovatePapyrus").innerHTML =\n            `Papyrus: ${papyrus.amount}`;\n          document.getElementById("innovateCrystals").innerHTML =\n            `Crystals: ${crystals.amount}`;\n          document.getElementById("innovateMateria").innerHTML =\n            `Materia: ${materia.amount}`;\n\n          // Clear crafting container\n          craftingContainer.innerHTML = "";\n\n          Object.keys(craftRecipes).forEach((item) => {\n            const recipe = craftRecipes[item];\n            const canCraft =\n              herbs.amount >= recipe.herbs &&\n              papyrus.amount >= recipe.papyrus &&\n              crystals.amount >= recipe.crystals &&\n              materia.amount >= recipe.materia;\n            if (canCraft) {\n              const craftButton = document.createElement("button");\n              craftButton.textContent = `Craft ${item}`;\n              craftButton.onclick = () => {\n                herbs.amount -= recipe.herbs;\n                papyrus.amount -= recipe.papyrus;\n                crystals.amount -= recipe.crystals;\n                materia.amount -= recipe.materia;\n                innovate[item].amount += 1;\n                logMessage(`You have crafted a ${item}!`, modalLog);\n                updateHUD();\n                updateCraftingInterface();\n              };\n              craftingContainer.appendChild(craftButton);\n            }\n          });\n        }\n\n        cultivateBtn.addEventListener("click", () => {\n          cultivateModal.style.display = "block";\n          modalLogCultivate.innerHTML = ""; // Clear previous messages\n        });\n\n        performGardenButton.addEventListener("click", () => {\n          if (\n            updateResources("qi", 10) &&\n            updateResources("focus", -Math.floor(focus * 0.1))\n          ) {\n            herbs.amount += 1;\n            experience += euthymiaLevel;\n            herbs.variations[getRandomHerb()] += 1;\n            updateHUD();\n            logMessage(\n              "You cultivated in the garden and found some herbs!",\n              modalLogCultivate,\n            );\n            checkLevelUp();\n          }\n        });\n\n        performMineButton.addEventListener("click", () => {\n          if (\n            updateResources("qi", 10) &&\n            updateResources("focus", -Math.floor(focus * 0.1))\n          ) {\n            crystals.amount += 1;\n            experience += euthymiaLevel;\n            crystals.variations[getRandomCrystal()] += 1;\n            updateHUD();\n            logMessage(\n              "You cultivated in the mine and found some crystals!",\n              modalLogCultivate,\n            );\n            checkLevelUp();\n          }\n        });\n\n        meditateBtn.addEventListener("click", () => {\n          if (\n            updateResources("qi", -Math.floor(qi * 0.1)) &&\n            updateResources("focus", 10)\n          ) {\n            materia.amount += 1;\n            experience += euthymiaLevel;\n            materia.variations[getRandomMateria()] += 1;\n            updateHUD();\n            logMessage("You meditated and found some materia!");\n            checkLevelUp();\n          }\n        });\n\n        toggleInnovateButton.addEventListener("click", () => {\n          innovateModal.style.display = "block";\n          updateCraftingInterface();\n        });\n\n        closeInnovateModal.addEventListener("click", () => {\n          innovateModal.style.display = "none";\n        });\n\n        closeCultivateModal.addEventListener("click", () => {\n          cultivateModal.style.display = "none";\n        });\n\n        toggleCraftingButton.addEventListener("click", () => {\n          craftingContainer.style.display =\n            craftingContainer.style.display === "none" ? "block" : "none";\n          updateCraftingInterface();\n        });\n\n        exploreBtn.addEventListener("click", () => {\n          exploreModal.style.display = "block";\n          exploreOptions.innerHTML = "";\n          Object.keys(locales).forEach((key) => {\n            const locale = locales[key];\n            if (locale.unlocked) {\n              const localeButton = document.createElement("button");\n              localeButton.textContent = locale.name;\n              localeButton.onclick = () => {\n                currentLocale = key;\n                logMessage(\n                  `You have traveled to ${locale.name}`,\n                  modalLogExplore,\n                );\n                exploreModal.style.display = "none";\n              };\n              exploreOptions.appendChild(localeButton);\n            }\n          });\n        });\n\n        closeExploreModal.addEventListener("click", () => {\n          exploreModal.style.display = "none";\n        });\n\n        function getRandomHerb() {\n          const herbKeys = Object.keys(herbs.variations);\n          return herbKeys[Math.floor(Math.random() * herbKeys.length)];\n        }\n\n        function getRandomMateria() {\n          const materiaKeys = Object.keys(materia.variations);\n          return materiaKeys[Math.floor(Math.random() * materiaKeys.length)];\n        }\n\n        function getRandomCrystal() {\n          const crystalKeys = Object.keys(crystals.variations);\n          return crystalKeys[Math.floor(Math.random() * crystalKeys.length)];\n        }\n\n        function updateResources(type, amount) {\n          if (type === "qi" && qi + amount < 0) {\n            logMessage("Not enough qi!");\n            return false;\n          }\n          if (type === "focus" && focus + amount < 0) {\n            logMessage("Not enough focus!");\n            return false;\n          }\n          // Add similar checks for other resources\n\n          // If checks pass, update the resource\n          window[type] += amount;\n          return true;\n        }\n\n        function checkLevelUp() {\n          const nextLevel = euthymiaLevel + 1;\n          const requiredXP = nextLevel * 100; // Simple formula, adjust as needed\n          if (experience >= requiredXP) {\n            euthymiaLevel++;\n            logMessage(\n              `Congratulations! You\'ve reached Euthymia level ${euthymiaLevel}!`,\n            );\n            updateHUD();\n          }\n        }\n\n        window.onclick = function (event) {\n          if (event.target == innovateModal) {\n            innovateModal.style.display = "none";\n          }\n          if (event.target == cultivateModal) {\n            cultivateModal.style.display = "none";\n          }\n          if (event.target == exploreModal) {\n            exploreModal.style.display = "none";\n          }\n        };\n\n        // Initial HUD update\n        updateHUD();\n      });\n    <\/script>  '], [" ", '<div class="game-container" data-astro-cid-bqr4ieqk> <div id="hud" class="hud" data-astro-cid-bqr4ieqk> <div class="hud-stats short" data-astro-cid-bqr4ieqk> <div class="hud-item" data-astro-cid-bqr4ieqk>\neuthymia: <span id="euthymiaLevel" data-astro-cid-bqr4ieqk>1</span> </div> <div class="hud-item" data-astro-cid-bqr4ieqk>focus: <span id="focus" data-astro-cid-bqr4ieqk>100</span></div> <div class="hud-item" data-astro-cid-bqr4ieqk>qi: <span id="qi" data-astro-cid-bqr4ieqk>100</span></div> <div class="hud-item" data-astro-cid-bqr4ieqk>xp: <span id="experience" data-astro-cid-bqr4ieqk>0</span></div> </div> </div> <div id="log" class="log" data-astro-cid-bqr4ieqk> <!-- Game log will be dynamically inserted here --> </div> <div class="actions bordered" data-astro-cid-bqr4ieqk> <button id="cultivate" data-astro-cid-bqr4ieqk>cultivate</button> <button id="meditate" data-astro-cid-bqr4ieqk>meditate</button> <button id="toggleInnovate" data-astro-cid-bqr4ieqk>innovate</button> <button id="explore" data-astro-cid-bqr4ieqk>explore</button> </div> </div>  <div id="innovateModal" class="modal" data-astro-cid-bqr4ieqk> <div class="modal-content" data-astro-cid-bqr4ieqk> <span class="close" id="closeInnovateModal" data-astro-cid-bqr4ieqk>&times;</span> <h2 data-astro-cid-bqr4ieqk>Innovate:</h2> <br data-astro-cid-bqr4ieqk> <div class="innovation" data-astro-cid-bqr4ieqk> <div id="innovateHerbs" class="innovate-item" data-astro-cid-bqr4ieqk></div> <div id="innovatePapyrus" class="innovate-item" data-astro-cid-bqr4ieqk></div> <div id="innovateCrystals" class="innovate-item" data-astro-cid-bqr4ieqk></div> <div id="innovateMateria" class="innovate-item" data-astro-cid-bqr4ieqk></div> <div id="innovateWands" class="innovate-item" data-astro-cid-bqr4ieqk></div> <div id="innovateTomes" class="innovate-item" data-astro-cid-bqr4ieqk></div> <div id="innovateTea" class="innovate-item" data-astro-cid-bqr4ieqk></div> </div> <br data-astro-cid-bqr4ieqk> <button id="toggleCrafting" data-astro-cid-bqr4ieqk>Toggle Crafting Interface</button> <div id="craftingContainer" class="crafting-list" style="display: none;" data-astro-cid-bqr4ieqk> <!-- Crafting items will be dynamically inserted here --> </div> </div> <div class="modal-background" data-astro-cid-bqr4ieqk> <h3 data-astro-cid-bqr4ieqk>Log:</h3> <div id="modalLog" class="modal-log" data-astro-cid-bqr4ieqk> <!-- Output log information displayed here --> </div> </div> </div>  <div id="cultivateModal" class="modal" data-astro-cid-bqr4ieqk> <div class="modal-content" data-astro-cid-bqr4ieqk> <span class="close" id="closeCultivateModal" data-astro-cid-bqr4ieqk>&times;</span> <h2 data-astro-cid-bqr4ieqk>Cultivate:</h2> <button id="performGarden" class="action" data-astro-cid-bqr4ieqk>garden</button> <button id="performMine" class="action" data-astro-cid-bqr4ieqk>mine</button> </div> <div class="modal-background" data-astro-cid-bqr4ieqk> <div id="modalLogCultivate" class="modal-log" data-astro-cid-bqr4ieqk> <!-- Output log information displayed here --> </div> </div> </div>  <div id="exploreModal" class="modal" data-astro-cid-bqr4ieqk> <div class="modal-content" data-astro-cid-bqr4ieqk> <span class="close" id="closeExploreModal" data-astro-cid-bqr4ieqk>&times;</span> <h2 data-astro-cid-bqr4ieqk>Explore Locations:</h2> <div id="exploreOptions" data-astro-cid-bqr4ieqk> <!-- Locations will be dynamically inserted here --> </div> </div> <div class="modal-background" data-astro-cid-bqr4ieqk> <div id="modalLogExplore" class="modal-log" data-astro-cid-bqr4ieqk> <!-- Output log information displayed here --> </div> </div> </div> <script>\n      document.addEventListener("DOMContentLoaded", function () {\n        let qi = 100;\n        let focus = 100;\n        let experience = 0;\n        let euthymiaLevel = 1;\n        let currentLocale = "einSof";\n\n        // collectable items\n        let herbs = {\n          amount: 0,\n          variations: { rosemary: 0, thyme: 0, sage: 0, basil: 0 },\n        };\n        let materia = {\n          amount: 0,\n          variations: { earth: 0, fire: 0, wind: 0, water: 0 },\n        };\n        let papyrus = { amount: 0, variations: { old: 0, new: 0 } };\n        let crystals = {\n          amount: 0,\n          variations: { amethyst: 0, opal: 0, citrine: 0, quartz: 0 },\n        };\n\n        // the adept/user\'s bag of items: inventory\n        let innovate = {\n          tea: { amount: 0, rarity: "common" },\n          wand: { amount: 0, rarity: "common" },\n          tome: { amount: 0, rarity: "common" },\n        };\n\n        // craftable items\n        const craftRecipes = {\n          tea: { herbs: 1, papyrus: 1, materia: 1, rarity: "common" },\n          wand: {\n            herbs: 3,\n            papyrus: 2,\n            crystals: 1,\n            materia: 1,\n            rarity: "common",\n          },\n          tome: {\n            herbs: 2,\n            papyrus: 3,\n            crystals: 1,\n            materia: 1,\n            rarity: "common",\n          },\n        };\n\n        // available locales the adept/user can astral project to\n        const locales = {\n          einSof: { name: "Ein Sof", unlocked: true },\n          1: { name: "Locale I: Tiphereth", unlocked: false },\n          2: { name: "Locale II: Binah", unlocked: false },\n          3: { name: "Locale III: Kether", unlocked: false },\n        };\n\n        // html constants\n        const log = document.getElementById("log");\n        const modalLog = document.getElementById("modalLog");\n        const modalLogCultivate = document.getElementById("modalLogCultivate");\n        const modalLogExplore = document.getElementById("modalLogExplore");\n        const focusDisplay = document.getElementById("focus");\n        const xpDisplay = document.getElementById("experience");\n        const euthymiaLevelDisplay = document.getElementById("euthymiaLevel");\n        const qiDisplay = document.getElementById("qi");\n        const meditateBtn = document.getElementById("meditate");\n        const cultivateBtn = document.getElementById("cultivate");\n        const toggleInnovateButton = document.getElementById("toggleInnovate");\n        const innovateModal = document.getElementById("innovateModal");\n        const cultivateModal = document.getElementById("cultivateModal");\n        const closeInnovateModal =\n          document.getElementById("closeInnovateModal");\n        const closeCultivateModal = document.getElementById(\n          "closeCultivateModal",\n        );\n        const performGardenButton = document.getElementById("performGarden");\n        const performMineButton = document.getElementById("performMine");\n        const toggleCraftingButton = document.getElementById("toggleCrafting");\n        const craftingContainer = document.getElementById("craftingContainer");\n        const exploreModal = document.getElementById("exploreModal");\n        const closeExploreModal = document.getElementById("closeExploreModal");\n        const exploreBtn = document.getElementById("explore");\n        const exploreOptions = document.getElementById("exploreOptions");\n\n        // initializations\n        let initialLog = true;\n\n        function updateHUD() {\n          focusDisplay.textContent = focus;\n          xpDisplay.textContent = experience;\n          euthymiaLevelDisplay.textContent = euthymiaLevel;\n          qiDisplay.textContent = qi;\n        }\n\n        function logMessage(message, logElement = log) {\n          if (initialLog) {\n            logElement.innerHTML = "";\n            initialLog = false;\n          }\n          const entry = document.createElement("div");\n          entry.className = "log-entry";\n          entry.textContent = message;\n          logElement.insertBefore(entry, logElement.firstChild);\n\n          const entries = Array.from(logElement.children);\n          if (entries.length > 3) {\n            entries.slice(3).forEach((e) => e.classList.add("fade-out"));\n            setTimeout(() => {\n              entries.slice(3).forEach((e) => {\n                if (e.parentElement === logElement) {\n                  logElement.removeChild(e);\n                }\n              });\n            }, 5000);\n          }\n        }\n\n        function updateCraftingInterface() {\n          // Update crafting items in innovate modal\n          document.getElementById("innovateHerbs").innerHTML =\n            \\`Herbs: \\${herbs.amount}\\`;\n          document.getElementById("innovatePapyrus").innerHTML =\n            \\`Papyrus: \\${papyrus.amount}\\`;\n          document.getElementById("innovateCrystals").innerHTML =\n            \\`Crystals: \\${crystals.amount}\\`;\n          document.getElementById("innovateMateria").innerHTML =\n            \\`Materia: \\${materia.amount}\\`;\n\n          // Clear crafting container\n          craftingContainer.innerHTML = "";\n\n          Object.keys(craftRecipes).forEach((item) => {\n            const recipe = craftRecipes[item];\n            const canCraft =\n              herbs.amount >= recipe.herbs &&\n              papyrus.amount >= recipe.papyrus &&\n              crystals.amount >= recipe.crystals &&\n              materia.amount >= recipe.materia;\n            if (canCraft) {\n              const craftButton = document.createElement("button");\n              craftButton.textContent = \\`Craft \\${item}\\`;\n              craftButton.onclick = () => {\n                herbs.amount -= recipe.herbs;\n                papyrus.amount -= recipe.papyrus;\n                crystals.amount -= recipe.crystals;\n                materia.amount -= recipe.materia;\n                innovate[item].amount += 1;\n                logMessage(\\`You have crafted a \\${item}!\\`, modalLog);\n                updateHUD();\n                updateCraftingInterface();\n              };\n              craftingContainer.appendChild(craftButton);\n            }\n          });\n        }\n\n        cultivateBtn.addEventListener("click", () => {\n          cultivateModal.style.display = "block";\n          modalLogCultivate.innerHTML = ""; // Clear previous messages\n        });\n\n        performGardenButton.addEventListener("click", () => {\n          if (\n            updateResources("qi", 10) &&\n            updateResources("focus", -Math.floor(focus * 0.1))\n          ) {\n            herbs.amount += 1;\n            experience += euthymiaLevel;\n            herbs.variations[getRandomHerb()] += 1;\n            updateHUD();\n            logMessage(\n              "You cultivated in the garden and found some herbs!",\n              modalLogCultivate,\n            );\n            checkLevelUp();\n          }\n        });\n\n        performMineButton.addEventListener("click", () => {\n          if (\n            updateResources("qi", 10) &&\n            updateResources("focus", -Math.floor(focus * 0.1))\n          ) {\n            crystals.amount += 1;\n            experience += euthymiaLevel;\n            crystals.variations[getRandomCrystal()] += 1;\n            updateHUD();\n            logMessage(\n              "You cultivated in the mine and found some crystals!",\n              modalLogCultivate,\n            );\n            checkLevelUp();\n          }\n        });\n\n        meditateBtn.addEventListener("click", () => {\n          if (\n            updateResources("qi", -Math.floor(qi * 0.1)) &&\n            updateResources("focus", 10)\n          ) {\n            materia.amount += 1;\n            experience += euthymiaLevel;\n            materia.variations[getRandomMateria()] += 1;\n            updateHUD();\n            logMessage("You meditated and found some materia!");\n            checkLevelUp();\n          }\n        });\n\n        toggleInnovateButton.addEventListener("click", () => {\n          innovateModal.style.display = "block";\n          updateCraftingInterface();\n        });\n\n        closeInnovateModal.addEventListener("click", () => {\n          innovateModal.style.display = "none";\n        });\n\n        closeCultivateModal.addEventListener("click", () => {\n          cultivateModal.style.display = "none";\n        });\n\n        toggleCraftingButton.addEventListener("click", () => {\n          craftingContainer.style.display =\n            craftingContainer.style.display === "none" ? "block" : "none";\n          updateCraftingInterface();\n        });\n\n        exploreBtn.addEventListener("click", () => {\n          exploreModal.style.display = "block";\n          exploreOptions.innerHTML = "";\n          Object.keys(locales).forEach((key) => {\n            const locale = locales[key];\n            if (locale.unlocked) {\n              const localeButton = document.createElement("button");\n              localeButton.textContent = locale.name;\n              localeButton.onclick = () => {\n                currentLocale = key;\n                logMessage(\n                  \\`You have traveled to \\${locale.name}\\`,\n                  modalLogExplore,\n                );\n                exploreModal.style.display = "none";\n              };\n              exploreOptions.appendChild(localeButton);\n            }\n          });\n        });\n\n        closeExploreModal.addEventListener("click", () => {\n          exploreModal.style.display = "none";\n        });\n\n        function getRandomHerb() {\n          const herbKeys = Object.keys(herbs.variations);\n          return herbKeys[Math.floor(Math.random() * herbKeys.length)];\n        }\n\n        function getRandomMateria() {\n          const materiaKeys = Object.keys(materia.variations);\n          return materiaKeys[Math.floor(Math.random() * materiaKeys.length)];\n        }\n\n        function getRandomCrystal() {\n          const crystalKeys = Object.keys(crystals.variations);\n          return crystalKeys[Math.floor(Math.random() * crystalKeys.length)];\n        }\n\n        function updateResources(type, amount) {\n          if (type === "qi" && qi + amount < 0) {\n            logMessage("Not enough qi!");\n            return false;\n          }\n          if (type === "focus" && focus + amount < 0) {\n            logMessage("Not enough focus!");\n            return false;\n          }\n          // Add similar checks for other resources\n\n          // If checks pass, update the resource\n          window[type] += amount;\n          return true;\n        }\n\n        function checkLevelUp() {\n          const nextLevel = euthymiaLevel + 1;\n          const requiredXP = nextLevel * 100; // Simple formula, adjust as needed\n          if (experience >= requiredXP) {\n            euthymiaLevel++;\n            logMessage(\n              \\`Congratulations! You\'ve reached Euthymia level \\${euthymiaLevel}!\\`,\n            );\n            updateHUD();\n          }\n        }\n\n        window.onclick = function (event) {\n          if (event.target == innovateModal) {\n            innovateModal.style.display = "none";\n          }\n          if (event.target == cultivateModal) {\n            cultivateModal.style.display = "none";\n          }\n          if (event.target == exploreModal) {\n            exploreModal.style.display = "none";\n          }\n        };\n\n        // Initial HUD update\n        updateHUD();\n      });\n    <\/script>  '])), maybeRenderHead()) })} ` })}`;
}, "/home/source/GitHub/sourceaura.github.io/src/pages/euthymia.astro", void 0);

const $$file = "/home/source/GitHub/sourceaura.github.io/src/pages/euthymia.astro";
const $$url = "/euthymia";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  default: $$Euthymia,
  file: $$file,
  url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
//# sourceMappingURL=euthymia.astro.mjs.map
