---
import Container from "@components/Container.astro";
---

<Container>
  <button
    id="sys-info-btn"
    aria-label="System information"
    class="group flex items-center justify-start rounded-lg border border-black/15 hover:bg-black/5 focus-visible:bg-black/5 dark:border-white/20 dark:hover:bg-white/5 dark:focus-visible:bg-white/5 w-32 px-4 relative"
  >
    <span id="current-time" class="text-sm text-ghost-600 ml-2"></span>
    <div class="flex-1"></div>
    <span id="online-indicator" class="glow-ring h-2 w-2 rounded-full bg-red-500" title="Offline"></span>
  </button>

  <style>
    .glow-ring {
      --glow-color: none;
      position: relative;
      border: 2px solid transparent;
      border-radius: 50%;
      animation: pulsate 2s infinite;
      margin-left: 8px;
      box-shadow: var(--glow-color);
    }

    @keyframes pulsate {
      0% {
        transform: scale(0.9);
        box-shadow: 0 0 0 0px rgba(255, 255, 255, 0.7);
      }
      50% {
        transform: scale(1);
        box-shadow: 0 0 0 10px rgba(255, 255, 255, 0);
      }
      100% {
        transform: scale(0.9);
        box-shadow: 0 0 0 0px rgba(255, 255, 255, 0);
      }
    }
  </style>

  <script>
    let indicatorState = 0;

    function updateIndicatorState() {
      const indicator = document.getElementById('online-indicator');
      if (!indicator) return;

      const states = [
        { class: 'bg-red-500', title: 'Offline', glow: 'none' },
        { class: 'bg-yellow-500', title: 'Away', glow: '0 0 10px yellow, 0 0 20px orange' },
        { class: 'bg-green-500', title: 'Online', glow: '0 0 10px green, 0 0 20px lime' }
      ];

      const { class: className, title, glow } = states[indicatorState];
      indicator.className = `glow-ring h-2 w-2 rounded-full ${className}`;
      indicator.setAttribute('title', title);
      indicator.style.setProperty('--glow-color', glow);
    }

    function toggleOnlineIndicator() {
      indicatorState = (indicatorState + 1) % 3;
      updateIndicatorState();
    }

    function getCurrentTime() {
      return new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
    }

    function updateCurrentTime() {
      const currentTimeElement = document.getElementById('current-time');
      if (currentTimeElement) {
        currentTimeElement.textContent = getCurrentTime();
      }
    }

    // Initial setup
    updateIndicatorState();
    updateCurrentTime();

    // Update current time every second
    setInterval(updateCurrentTime, 1000);

    // Event listener for indicator click
    document.getElementById('sys-info-btn')?.addEventListener('click', toggleOnlineIndicator);
  </script>
</Container>
